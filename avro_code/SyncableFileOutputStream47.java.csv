Text,Token
"/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */",Comment
"
",Newline
package,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
file,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
File,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
FileDescriptor,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
FileNotFoundException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
FileOutputStream,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
IOException,Identifier
;,Punctuation
"
",Newline
"
",Newline
"/**
 * An implementation of {@linkplain Syncable} which writes to a file.
 * An instance of this class can be used with {@linkplain DataFileWriter} to
 * guarantee that Avro Container Files are persisted to disk on supported
 * platforms using the
 * {@linkplain org.apache.avro.file.DataFileWriter#fSync()} method.
 *
 * @see FileOutputStream
 */",Comment
"
",Newline
public,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
SyncableFileOutputStream,Identifier
"
",Newline
  ,Whitespace
extends,Keyword
 ,Whitespace
FileOutputStream,Identifier
 ,Whitespace
implements,Keyword
 ,Whitespace
Syncable,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates an instance of {@linkplain SyncableFileOutputStream} with the
   * given name.
   *
   * @param name - the full file name.
   * @throws FileNotFoundException - if the file cannot be created or opened.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
SyncableFileOutputStream,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
FileNotFoundException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
super,Keyword
(,Punctuation
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates an instance of {@linkplain SyncableFileOutputStream} using the
   * given {@linkplain File} instance.
   *
   * @param file - The file to use to create the output stream.
   *
   * @throws FileNotFoundException - if the file cannot be created or opened.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
SyncableFileOutputStream,Identifier
(,Punctuation
File,Identifier
 ,Whitespace
file,Identifier
),Punctuation
"
",Newline
    ,Whitespace
throws,Keyword
 ,Whitespace
FileNotFoundException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
super,Keyword
(,Punctuation
file,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates an instance of {@linkplain SyncableFileOutputStream} with the
   * given name and optionally append to the file if it already exists.
   *
   * @param name - the full file name.
   * @param append - true if the file is to be appended to
   *
   * @throws FileNotFoundException - if the file cannot be created or opened.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
SyncableFileOutputStream,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
",",Punctuation
 ,Whitespace
boolean,Keyword
 ,Whitespace
append,Identifier
),Punctuation
"
",Newline
    ,Whitespace
throws,Keyword
 ,Whitespace
FileNotFoundException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
super,Keyword
(,Punctuation
name,Identifier
",",Punctuation
 ,Whitespace
append,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates an instance of {@linkplain SyncableFileOutputStream}
   * that writes to the file represented by the given {@linkplain File}
   * instance and optionally append to the file if it already exists.
   *
   * @param file - the file instance to use to create the stream.
   * @param append - true if the file is to be appended to
   *
   * @throws FileNotFoundException - if the file cannot be created or opened.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
SyncableFileOutputStream,Identifier
(,Punctuation
File,Identifier
 ,Whitespace
file,Identifier
",",Punctuation
 ,Whitespace
boolean,Keyword
 ,Whitespace
append,Identifier
),Punctuation
"
",Newline
    ,Whitespace
throws,Keyword
 ,Whitespace
FileNotFoundException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
super,Keyword
(,Punctuation
file,Identifier
",",Punctuation
 ,Whitespace
append,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates an instance of {@linkplain SyncableFileOutputStream}
   * using the given {@linkplain FileDescriptor} instance.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
SyncableFileOutputStream,Identifier
(,Punctuation
FileDescriptor,Identifier
 ,Whitespace
fdObj,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
super,Keyword
(,Punctuation
fdObj,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * {@inheritDoc}
   */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
sync,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
getFD,Identifier
(,Punctuation
),Punctuation
.,Punctuation
sync,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
},Punctuation
"
",Newline
