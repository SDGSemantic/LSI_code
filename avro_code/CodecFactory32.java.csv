Text,Token
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",Comment
"
",Newline
package,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
file,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
HashMap,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
Map,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
zip,Identifier
.,Punctuation
Deflater,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
AvroRuntimeException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
tukaani,Identifier
.,Punctuation
xz,Identifier
.,Punctuation
LZMA2Options,Identifier
;,Punctuation
"
",Newline
"
",Newline
"/**  Encapsulates the ability to specify and configure a compression codec.
 *
 * Currently there are three codecs registered by default:
 * <ul>
 *   <li>{@code null}</li>
 *   <li>{@code deflate}</li>
 *   <li>{@code snappy}</li>
 *   <li>{@code bzip2}</li>
 * </ul>
 *
 * New and custom codecs can be registered using {@link #addCodec(String,
 * CodecFactory)}.
 */",Comment
"
",Newline
public,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
CodecFactory,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
  ,Whitespace
"/** Null codec, for no compression. */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
CodecFactory,Identifier
 ,Whitespace
nullCodec,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
NullCodec,Identifier
.,Punctuation
OPTION,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Deflate codec, with specific compression.
   * compressionLevel should be between 1 and 9, inclusive. */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
CodecFactory,Identifier
 ,Whitespace
deflateCodec,Identifier
(,Punctuation
int,Keyword
 ,Whitespace
compressionLevel,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
DeflateCodec,Identifier
.,Punctuation
Option,Identifier
(,Punctuation
compressionLevel,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** XZ codec, with specific compression.
   * compressionLevel should be between 1 and 9, inclusive. */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
CodecFactory,Identifier
 ,Whitespace
xzCodec,Identifier
(,Punctuation
int,Keyword
 ,Whitespace
compressionLevel,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
XZCodec,Identifier
.,Punctuation
Option,Identifier
(,Punctuation
compressionLevel,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Snappy codec.*/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
CodecFactory,Identifier
 ,Whitespace
snappyCodec,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
SnappyCodec,Identifier
.,Punctuation
Option,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** bzip2 codec.*/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
CodecFactory,Identifier
 ,Whitespace
bzip2Codec,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
BZip2Codec,Identifier
.,Punctuation
Option,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Creates internal Codec. */,Comment
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
Codec,Identifier
 ,Whitespace
createInstance,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/** Mapping of string names (stored as metas) and codecs. 
   * Note that currently options (like compression level)
   * are not recoverable. */",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Map,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
CodecFactory,Identifier
>,Operator
 ,Whitespace
REGISTERED,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
"
",Newline
    ,Whitespace
new,Keyword
 ,Whitespace
HashMap,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
CodecFactory,Identifier
>,Operator
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
DEFAULT_DEFLATE_LEVEL,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Deflater,Identifier
.,Punctuation
DEFAULT_COMPRESSION,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
DEFAULT_XZ_LEVEL,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
LZMA2Options,Identifier
.,Punctuation
PRESET_DEFAULT,Identifier
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
static,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
addCodec,Identifier
(,Punctuation
"""null""",String
",",Punctuation
 ,Whitespace
nullCodec,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
addCodec,Identifier
(,Punctuation
"""deflate""",String
",",Punctuation
 ,Whitespace
deflateCodec,Identifier
(,Punctuation
DEFAULT_DEFLATE_LEVEL,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
addCodec,Identifier
(,Punctuation
"""snappy""",String
",",Punctuation
 ,Whitespace
snappyCodec,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
addCodec,Identifier
(,Punctuation
"""bzip2""",String
",",Punctuation
 ,Whitespace
bzip2Codec,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
addCodec,Identifier
(,Punctuation
"""xz""",String
",",Punctuation
 ,Whitespace
xzCodec,Identifier
(,Punctuation
DEFAULT_XZ_LEVEL,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Maps a codec name into a CodecFactory.
   *
   * Currently there are five codecs registered by default:
   * <ul>
   *   <li>{@code null}</li>
   *   <li>{@code deflate}</li>
   *   <li>{@code snappy}</li>
   *   <li>{@code bzip2}</li>
   *   <li>{@code xz}</li>
   * </ul>
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
CodecFactory,Identifier
 ,Whitespace
fromString,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
s,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
CodecFactory,Identifier
 ,Whitespace
o,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
REGISTERED,Identifier
.,Punctuation
get,Identifier
(,Punctuation
s,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
o,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
AvroRuntimeException,Identifier
(,Punctuation
"""Unrecognized codec: """,String
 ,Whitespace
+,Operator
 ,Whitespace
s,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
o,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
"
",Newline
"
",Newline
  ,Whitespace
"/** Adds a new codec implementation.  If name already had
   * a codec associated with it, returns the previous codec. */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
CodecFactory,Identifier
 ,Whitespace
addCodec,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
",",Punctuation
 ,Whitespace
CodecFactory,Identifier
 ,Whitespace
c,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
REGISTERED,Identifier
.,Punctuation
put,Identifier
(,Punctuation
name,Identifier
",",Punctuation
 ,Whitespace
c,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
toString,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
Codec,Identifier
 ,Whitespace
instance,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
this,Keyword
.,Punctuation
createInstance,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
instance,Identifier
.,Punctuation
toString,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
},Punctuation
"
",Newline
