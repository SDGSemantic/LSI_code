Text,Token
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",Comment
"
",Newline
"
",Newline
package,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
util,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
EOFException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
IOException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
InputStream,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
nio,Identifier
.,Punctuation
ByteBuffer,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
List,Identifier
;,Punctuation
"
",Newline
"
",Newline
/** Utility to present {@link ByteBuffer} data as an {@link InputStream}.*/,Comment
"
",Newline
public,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
ByteBufferInputStream,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
InputStream,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
List,Identifier
<,Operator
ByteBuffer,Identifier
>,Operator
 ,Whitespace
buffers,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
current,Identifier
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
ByteBufferInputStream,Identifier
(,Punctuation
List,Identifier
<,Operator
ByteBuffer,Identifier
>,Operator
 ,Whitespace
buffers,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
.,Punctuation
buffers,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
buffers,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** @see InputStream#read()
   * @throws EOFException if EOF is reached. */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
read,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
getBuffer,Identifier
(,Punctuation
),Punctuation
.,Punctuation
get,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xff,Literal
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** @see InputStream#read(byte[], int, int)
   * @throws EOFException if EOF is reached before reading all the bytes. */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
read,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
b,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
off,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
len,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
len,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
0,Literal
),Punctuation
 ,Whitespace
return,Keyword
 ,Whitespace
0,Literal
;,Punctuation
"
",Newline
    ,Whitespace
ByteBuffer,Identifier
 ,Whitespace
buffer,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
getBuffer,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
remaining,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
buffer,Identifier
.,Punctuation
remaining,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
len,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
remaining,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
buffer,Identifier
.,Punctuation
get,Identifier
(,Punctuation
b,Identifier
",",Punctuation
 ,Whitespace
off,Identifier
",",Punctuation
 ,Whitespace
remaining,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
remaining,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
else,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
buffer,Identifier
.,Punctuation
get,Identifier
(,Punctuation
b,Identifier
",",Punctuation
 ,Whitespace
off,Identifier
",",Punctuation
 ,Whitespace
len,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
len,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Read a buffer from the input without copying, if possible.
   * @throws EOFException if EOF is reached before reading all the bytes. */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
ByteBuffer,Identifier
 ,Whitespace
readBuffer,Identifier
(,Punctuation
int,Keyword
 ,Whitespace
length,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
length,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
0,Literal
),Punctuation
 ,Whitespace
return,Keyword
 ,Whitespace
ByteBuffer,Identifier
.,Punctuation
allocate,Identifier
(,Punctuation
0,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
ByteBuffer,Identifier
 ,Whitespace
buffer,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
getBuffer,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
buffer,Identifier
.,Punctuation
remaining,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
==,Operator
 ,Whitespace
length,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
           ,Whitespace
// can return current as-is?,Comment
"
",Newline
      ,Whitespace
current,Identifier
++,Operator
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
buffer,Identifier
;,Punctuation
                              ,Whitespace
// return w/o copying,Comment
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
// punt: allocate a new buffer & copy into it,Comment
"
",Newline
    ,Whitespace
ByteBuffer,Identifier
 ,Whitespace
result,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
ByteBuffer,Identifier
.,Punctuation
allocate,Identifier
(,Punctuation
length,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
start,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
0,Literal
;,Punctuation
"
",Newline
    ,Whitespace
while,Keyword
 ,Whitespace
(,Punctuation
start,Identifier
 ,Whitespace
<,Operator
 ,Whitespace
length,Identifier
),Punctuation
"
",Newline
      ,Whitespace
start,Identifier
 ,Whitespace
+=,Operator
 ,Whitespace
read,Identifier
(,Punctuation
result,Identifier
.,Punctuation
array,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
start,Identifier
",",Punctuation
 ,Whitespace
length,Identifier
-,Operator
start,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
result,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Returns the next non-empty buffer.
   * @throws EOFException if EOF is reached before reading all the bytes.
   */",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
ByteBuffer,Identifier
 ,Whitespace
getBuffer,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
while,Keyword
 ,Whitespace
(,Punctuation
current,Identifier
 ,Whitespace
<,Operator
 ,Whitespace
buffers,Identifier
.,Punctuation
size,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
ByteBuffer,Identifier
 ,Whitespace
buffer,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
buffers,Identifier
.,Punctuation
get,Identifier
(,Punctuation
current,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
buffer,Identifier
.,Punctuation
hasRemaining,Identifier
(,Punctuation
),Punctuation
),Punctuation
"
",Newline
        ,Whitespace
return,Keyword
 ,Whitespace
buffer,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
current,Identifier
++,Operator
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
EOFException,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
},Punctuation
"
",Newline
"
",Newline
