Text,Token
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",Comment
"
",Newline
package,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
IOException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
nio,Identifier
.,Punctuation
ByteBuffer,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
ArrayList,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
Arrays,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
HashMap,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
HashSet,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
List,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
Map,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
Set,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
Schema,Identifier
.,Punctuation
Field,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
generic,Identifier
.,Punctuation
GenericData,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
generic,Identifier
.,Punctuation
GenericRecord,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
codehaus,Identifier
.,Punctuation
jackson,Identifier
.,Punctuation
JsonNode,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
codehaus,Identifier
.,Punctuation
jackson,Identifier
.,Punctuation
io,Identifier
.,Punctuation
JsonStringEncoder,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
codehaus,Identifier
.,Punctuation
jackson,Identifier
.,Punctuation
map,Identifier
.,Punctuation
ObjectMapper,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
codehaus,Identifier
.,Punctuation
jackson,Identifier
.,Punctuation
node,Identifier
.,Punctuation
TextNode,Identifier
;,Punctuation
"
",Newline
"
",Newline
"/**
 * <p>
 * A fluent interface for building {@link Schema} instances. The flow of the API
 * is designed to mimic the <a
 * href=""http://avro.apache.org/docs/current/spec.html#schemas"">Avro Schema
 * Specification</a>
 * </p>
 * For example, the below JSON schema and the fluent builder code to create it
 * are very similar:
 * 
 * <pre>
 * {
 *   ""type"": ""record"",
 *   ""name"": ""HandshakeRequest"", ""namespace"":""org.apache.avro.ipc"",
 *   ""fields"": [
 *     {""name"": ""clientHash"",
 *      ""type"": {""type"": ""fixed"", ""name"": ""MD5"", ""size"": 16}},
 *     {""name"": ""clientProtocol"", ""type"": [""null"", ""string""]},
 *     {""name"": ""serverHash"", ""type"": ""MD5""},
 *     {""name"": ""meta"", ""type"": [""null"", {""type"": ""map"", ""values"": ""bytes""}]}
 *   ]
 * }
 * </pre>
 * 
 * <pre>
 *   Schema schema = SchemaBuilder
 *   .record(""HandshakeRequest"").namespace(""org.apache.avro.ipc)
 *   .fields()
 *     .name(""clientHash"").type().fixed(""MD5"").size(16).noDefault()
 *     .name(""clientProtocol"").type().nullable().stringType().noDefault()
 *     .name(""serverHash"").type(""MD5"")
 *     .name(""meta"").type().nullable().map().values().bytesType().noDefault()
 *   .endRecord();
 * </pre>
 * <p/>
 * 
 * <h5>Usage Guide</h5>
 * SchemaBuilder chains together many smaller builders and maintains nested
 * context in order to mimic the Avro Schema specification. Every Avro type in
 * JSON has required and optional JSON properties, as well as user-defined
 * properties.
 * <p/>
 * <h6>Selecting and Building an Avro Type</h6>
 * The API analogy for the right hand side of the Avro Schema JSON
 * <pre>
 * ""type"":
 * </pre>
 * is a {@link TypeBuilder}, {@link FieldTypeBuilder}, or
 * {@link UnionFieldTypeBuilder}, depending on the context. These types all
 * share a similar API for selecting and building types.
 * <p/>
 * <h5>Primitive Types</h5>
 * All Avro primitive types are trivial to configure. A primitive type in 
 * Avro JSON can be declared two ways, one that supports custom properties
 * and one that does not:
 * <pre>
 * {""type"":""int""}
 * {""type"":{""name"":""int""}}
 * {""type"":{""name"":""int"", ""customProp"":""val""}}
 * </pre>
 * The analogous code form for the above three JSON lines are the below
 * three lines:
 * <pre>
 *  .intType()
 *  .intBuilder().endInt()
 *  .intBuilder().prop(""customProp"", ""val"").endInt()
 * </pre>
 * Every primitive type has a shortcut to create the trivial type, and
 * a builder when custom properties are required.  The first line above is
 * a shortcut for the second, analogous to the JSON case.
 * <h6>Named Types</h6>
 * Avro named types have names, namespace, aliases, and doc.  In this API
 * these share a common parent, {@link NamespacedBuilder}.
 * The builders for named types require a name to be constructed, and optional
 * configuration via:
 * <li>{@link NamespacedBuilder#doc()}</li>
 * <li>{@link NamespacedBuilder#namespace(String)}</li>
 * <li>{@link NamespacedBuilder#aliases(String...)}</li>
 * <li>{@link PropBuilder#prop(String, String)}</li>
 * <p/>
 * Each named type completes configuration of the optional properties
 * with its own method:
 * <li>{@link FixedBuilder#size(int)}</li>
 * <li>{@link EnumBuilder#symbols(String...)}</li>
 * <li>{@link RecordBuilder#fields()}</li>
 * Example use of a named type with all optional parameters:
 * <pre>
 * .enumeration(""Suit"").namespace(""org.apache.test"")
 *   .aliases(""org.apache.test.OldSuit"")
 *   .doc(""CardSuits"")
 *   .prop(""customProp"", ""val"")
 *   .symbols(""SPADES"", ""HEARTS"", ""DIAMONDS"", ""CLUBS"")
 * </pre>
 * Which is equivalent to the JSON:
 * <pre>
 * { ""type"":""enum"",
 *   ""name"":""Suit"", ""namespace"":""org.apache.test"",
 *   ""aliases"":[""org.apache.test.OldSuit""],
 *   ""doc"":""Card Suits"",
 *   ""customProp"":""val"",
 *   ""symbols"":[""SPADES"", ""HEARTS"", ""DIAMONDS"", ""CLUBS""]
 * }
 * </pre>
 * <h6>Nested Types</h6>
 * The Avro nested types, map and array, can have custom properties like
 * all avro types, are not named, and must specify a nested type.
 * After configuration of optional properties, an array or map 
 * builds or selects its nested type with {@link ArrayBuilder#items()}
 * and {@link MapBuilder#values()}, respectively.
 * 
 * <h6>Fields</h6>
 * {@link RecordBuilder#fields()} returns a {@link FieldAssembler} for 
 * defining the fields of the record and completing it.
 * Each field must have a name, specified via {@link FieldAssembler#name(String)},
 * which returns a {@link FieldBuilder} for defining aliases, custom properties,
 * and documentation of the field.  After configuring these optional values for
 * a field, the type is selected or built with {@link FieldBuilder#type()}.
 * <p/>
 * Fields have default values that must be specified to complete the field.
 * {@link FieldDefault#noDefault()} is available for all field types, and
 * a specific method is available for each type to use a default, for example
 * {@link IntDefault#intDefault(int)}
 * <p/>
 * There are field shortcut methods on {@link FieldAssembler} for primitive types.
 * These shortcuts create required, optional, and nullable fields, but do not 
 * support field aliases, doc, or custom properties.
 * 
 * <h6>Unions</h6>
 * Union types are built via {@link TypeBuilder#unionOf()} or
 * {@link FieldTypeBuilder#unionOf()} in the context of type selection.
 * This chains together multiple types, in union order.  For example:
 * <pre>
 * .unionOf()
 *   .fixed(""IPv4"").size(4).and()
 *   .fixed(""IPv6"").size(16).and()
 *   .nullType().endUnion()
 * </pre>
 * is equivalent to the Avro schema JSON:
 * <pre>
 * [
 *   {""type"":""fixed"", ""name"":""IPv4"", ""size"":4},
 *   {""type"":""fixed"", ""name"":""IPv6"", ""size"":16},
 *   ""null""
 * ]
 * </pre>
 * In a field context, the first type of a union defines what default type
 * is allowed.
 * </p>
 * Unions have two shortcuts for common cases.  nullable()
 * creates a union of a type and null.  In a field type context, optional()
 * is available and creates a union of null and a type, with a null default.
 * The below two are equivalent:
 * <pre>
 *   .unionOf().intType().and().nullType().endUnion()
 *   .nullable().intType()
 * </pre>
 * The below two field declarations are equivalent:
 * <pre>
 *   .name(""f"").type().unionOf().nullType().and().longType().endUnion().nullDefault()
 *   .name(""f"").type().optional().longType()
 * </pre>
 * 
 * <h6>Explicit Types and Types by Name</h6>
 * Types can also be specified explicitly by passing in a Schema, or by name:
 * <pre>
 *   .type(Schema.create(Schema.Type.INT)) // explicitly specified
 *   .type(""MD5"")                       // reference by full name or short name
 *   .type(""MD5"", ""org.apache.avro.test"")  // reference by name and namespace
 * </pre>
 * When a type is specified by name, and the namespace is absent or null, the
 * namespace is inherited from the enclosing context.  A namespace will
 * propagate as a default to child fields, nested types, or later defined types
 * in a union.  To specify a name that has no namespace and ignore the inherited
 * namespace, set the namespace to """".
 * <p/>
 * {@link SchemaBuilder#builder(String)} returns a type builder with a default
 * namespace.  {@link SchemaBuilder#builder()} returns a type builder with no
 * default namespace.
 */",Comment
"
",Newline
public,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
SchemaBuilder,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
SchemaBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Create a builder for Avro schemas.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
TypeBuilder,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
builder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
TypeBuilder,Identifier
<,Operator
Schema,Identifier
>,Operator
(,Punctuation
new,Keyword
 ,Whitespace
SchemaCompletion,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
new,Keyword
 ,Whitespace
NameContext,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Create a builder for Avro schemas with a default namespace. Types created
   * without namespaces will inherit the namespace provided.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
TypeBuilder,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
builder,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
namespace,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
TypeBuilder,Identifier
<,Operator
Schema,Identifier
>,Operator
(,Punctuation
new,Keyword
 ,Whitespace
SchemaCompletion,Identifier
(,Punctuation
),Punctuation
",",Punctuation
"
",Newline
        ,Whitespace
new,Keyword
 ,Whitespace
NameContext,Identifier
(,Punctuation
),Punctuation
.,Punctuation
namespace,Identifier
(,Punctuation
namespace,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Create a builder for an Avro record with the specified name.
   * This is equivalent to:
   * <pre>
   *   builder().record(name);
   * </pre>
   * @param name the record name
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
RecordBuilder,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
record,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
builder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
record,Identifier
(,Punctuation
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Create a builder for an Avro enum with the specified name and symbols (values).
   * This is equivalent to:
   * <pre>
   *   builder().enumeration(name);
   * </pre>
   * @param name the enum name
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
EnumBuilder,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
enumeration,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
builder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
enumeration,Identifier
(,Punctuation
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Create a builder for an Avro fixed type with the specified name and size.
   * This is equivalent to:
   * <pre>
   *   builder().fixed(name);
   * </pre>
   * @param name the fixed name
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
FixedBuilder,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
fixed,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
builder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
fixed,Identifier
(,Punctuation
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Create a builder for an Avro array
   * This is equivalent to:
   * <pre>
   *   builder().array();
   * </pre>
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
ArrayBuilder,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
array,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
builder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
array,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Create a builder for an Avro map
   * This is equivalent to:
   * <pre>
   *   builder().map();
   * </pre>
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
MapBuilder,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
map,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
builder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
map,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Create a builder for an Avro union
   * This is equivalent to:
   * <pre>
   *   builder().unionOf();
   * </pre>
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
Schema,Identifier
>>,Operator
 ,Whitespace
unionOf,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
builder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unionOf,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Create a builder for a union of a type and null.
   * This is a shortcut for:
   * <pre>
   *   builder().nullable();
   * </pre>
   * and the following two lines are equivalent:
   * <pre>
   *   nullable().intType();
   * </pre>
   * <pre>
   *   unionOf().intType().and().nullType().endUnion();
   * </pre>
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
nullable,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
builder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
nullable,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * An abstract builder for all Avro types.  All Avro types
   * can have arbitrary string key-value properties.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
PropBuilder,Identifier
<,Operator
S,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
PropBuilder,Identifier
<,Operator
S,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
Map,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
JsonNode,Identifier
>,Operator
 ,Whitespace
props,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
PropBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Set name-value pair properties for this type or field.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
S,Identifier
 ,Whitespace
prop,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
val,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
prop,Identifier
(,Punctuation
name,Identifier
",",Punctuation
 ,Whitespace
TextNode,Identifier
.,Punctuation
valueOf,Identifier
(,Punctuation
val,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
// for internal use by the Parser,Comment
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
S,Identifier
 ,Whitespace
prop,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
",",Punctuation
 ,Whitespace
JsonNode,Identifier
 ,Whitespace
val,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
(,Punctuation
!,Operator
hasProps,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
props,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
HashMap,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
JsonNode,Identifier
>,Operator
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
props,Identifier
.,Punctuation
put,Identifier
(,Punctuation
name,Identifier
",",Punctuation
 ,Whitespace
val,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
boolean,Keyword
 ,Whitespace
hasProps,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
(,Punctuation
props,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
<,Operator
T,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
JsonProperties,Identifier
>,Operator
 ,Whitespace
T,Identifier
 ,Whitespace
addPropsTo,Identifier
(,Punctuation
T,Identifier
 ,Whitespace
jsonable,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
hasProps,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
for,Keyword
(,Punctuation
Map,Identifier
.,Punctuation
Entry,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
JsonNode,Identifier
>,Operator
 ,Whitespace
prop,Identifier
 ,Whitespace
:,Operator
 ,Whitespace
props,Identifier
.,Punctuation
entrySet,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
jsonable,Identifier
.,Punctuation
addProp,Identifier
(,Punctuation
prop,Identifier
.,Punctuation
getKey,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
prop,Identifier
.,Punctuation
getValue,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
jsonable,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"/** a self-type for chaining builder subclasses.  Concrete subclasses
     * must return 'this' **/",Comment
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
S,Identifier
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * An abstract type that provides builder methods for configuring the name,
   * doc, and aliases of all Avro types that have names (fields, Fixed, Record,
   * and Enum).
   * <p/>
   * All Avro named types and fields have 'doc', 'aliases', and 'name'
   * components. 'name' is required, and provided to this builder. 'doc' and
   * 'alises' are optional.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
NamedBuilder,Identifier
<,Operator
S,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
NamedBuilder,Identifier
<,Operator
S,Identifier
>>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
PropBuilder,Identifier
<,Operator
S,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
name,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
doc,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
String,Identifier
[,Punctuation
],Punctuation
 ,Whitespace
aliases,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
NamedBuilder,Identifier
(,Punctuation
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
checkRequired,Identifier
(,Punctuation
name,Identifier
",",Punctuation
 ,Whitespace
"""Type must have a name""",String
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
names,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
name,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
name,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** configure this type's optional documentation string **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
S,Identifier
 ,Whitespace
doc,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
doc,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
doc,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
doc,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** configure this type's optional name aliases **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
S,Identifier
 ,Whitespace
aliases,Identifier
(,Punctuation
String,Identifier
.,Punctuation
.,Punctuation
.,Punctuation
 ,Whitespace
aliases,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
aliases,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
aliases,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
doc,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
doc,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
name,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
addAliasesTo,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
null,Keyword
 ,Whitespace
!=,Operator
 ,Whitespace
aliases,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
String,Identifier
 ,Whitespace
alias,Identifier
 ,Whitespace
:,Operator
 ,Whitespace
aliases,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
schema,Identifier
.,Punctuation
addAlias,Identifier
(,Punctuation
alias,Identifier
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
schema,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
Field,Identifier
 ,Whitespace
addAliasesTo,Identifier
(,Punctuation
Field,Identifier
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
null,Keyword
 ,Whitespace
!=,Operator
 ,Whitespace
aliases,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
String,Identifier
 ,Whitespace
alias,Identifier
 ,Whitespace
:,Operator
 ,Whitespace
aliases,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
field,Identifier
.,Punctuation
addAlias,Identifier
(,Punctuation
alias,Identifier
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
field,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * An abstract type that provides builder methods for configuring the
   * namespace for all Avro types that have namespaces (Fixed, Record, and
   * Enum).
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
NamespacedBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
S,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
NamespacedBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
S,Identifier
>>,Operator
"
",Newline
      ,Whitespace
extends,Keyword
 ,Whitespace
NamedBuilder,Identifier
<,Operator
S,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
namespace,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
NamespacedBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
context,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Set the namespace of this type. To clear the namespace, set empty string.
     * <p/>
     * When the namespace is null or unset, the namespace of the type defaults
     * to the namespace of the enclosing context.
     **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
S,Identifier
 ,Whitespace
namespace,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
namespace,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
namespace,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
namespace,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
space,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
null,Keyword
 ,Whitespace
==,Operator
 ,Whitespace
namespace,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
return,Keyword
 ,Whitespace
names,Identifier
(,Punctuation
),Punctuation
.,Punctuation
namespace,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
namespace,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
completeSchema,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
addPropsTo,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
addAliasesTo,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
names,Identifier
(,Punctuation
),Punctuation
.,Punctuation
put,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
schema,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * An abstraction for sharing code amongst all primitive type builders.
   */",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
PrimitiveBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
P,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
PrimitiveBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
P,Identifier
>>,Operator
"
",Newline
      ,Whitespace
extends,Keyword
 ,Whitespace
PropBuilder,Identifier
<,Operator
P,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
immutable,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
PrimitiveBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
Schema,Identifier
.,Punctuation
Type,Identifier
 ,Whitespace
type,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
context,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
immutable,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
names,Identifier
.,Punctuation
getFullname,Identifier
(,Punctuation
type,Identifier
.,Punctuation
getName,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
end,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
immutable,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
super,Keyword
.,Punctuation
hasProps,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
create,Identifier
(,Punctuation
immutable,Identifier
.,Punctuation
getType,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
addPropsTo,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
context,Identifier
.,Punctuation
complete,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro boolean type with optional properties. Set properties with
   * {@link #prop(String, String)}, and finalize with {@link #endBoolean()}
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
BooleanBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
PrimitiveBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
BooleanBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
BooleanBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
BOOLEAN,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
BooleanBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
BooleanBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
BooleanBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** complete building this type, return control to context **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
endBoolean,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
end,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro int type with optional properties. Set properties with
   * {@link #prop(String, String)}, and finalize with {@link #endInt()}
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
IntBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
PrimitiveBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
IntBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
IntBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
INT,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
IntBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
IntBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
IntBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** complete building this type, return control to context **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
endInt,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
end,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro long type with optional properties. Set properties with
   * {@link #prop(String, String)}, and finalize with {@link #endLong()}
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
LongBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
PrimitiveBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
LongBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
LongBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
LONG,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
LongBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
LongBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
LongBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** complete building this type, return control to context **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
endLong,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
end,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro float type with optional properties. Set properties with
   * {@link #prop(String, String)}, and finalize with {@link #endFloat()}
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
FloatBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
PrimitiveBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
FloatBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FloatBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
FLOAT,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
FloatBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
FloatBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
FloatBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** complete building this type, return control to context **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
endFloat,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
end,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro double type with optional properties. Set properties with
   * {@link #prop(String, String)}, and finalize with {@link #endDouble()}
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
DoubleBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
PrimitiveBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
DoubleBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
DoubleBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
DOUBLE,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
DoubleBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
DoubleBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
DoubleBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** complete building this type, return control to context **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
endDouble,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
end,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro string type with optional properties. Set properties with
   * {@link #prop(String, String)}, and finalize with {@link #endString()}
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
StringBldr,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
PrimitiveBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
StringBldr,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
StringBldr,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
STRING,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
StringBldr,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
StringBldr,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
StringBldr,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** complete building this type, return control to context **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
endString,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
end,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro bytes type with optional properties. Set properties with
   * {@link #prop(String, String)}, and finalize with {@link #endBytes()}
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
BytesBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
PrimitiveBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
BytesBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
BytesBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
BYTES,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
BytesBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
BytesBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
BytesBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** complete building this type, return control to context **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
endBytes,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
end,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro null type with optional properties. Set properties with
   * {@link #prop(String, String)}, and finalize with {@link #endNull()}
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
NullBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
PrimitiveBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
NullBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
NullBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
NULL,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
NullBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
NullBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
NullBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** complete building this type, return control to context **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
endNull,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
end,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro Fixed type with optional properties, namespace, doc, and
   * aliases.
   * <p/>
   * Set properties with {@link #prop(String, String)}, namespace with
   * {@link #namespace(String)}, doc with {@link #doc(String)}, and aliases with
   * {@link #aliases(String[])}.
   * <p/>
   * The Fixed schema is finalized when its required size is set via
   * {@link #size(int)}.
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
FixedBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
NamespacedBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
FixedBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FixedBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
FixedBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
FixedBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
FixedBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** Configure this fixed type's size, and end its configuration. **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
size,Identifier
(,Punctuation
int,Keyword
 ,Whitespace
size,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
createFixed,Identifier
(,Punctuation
name,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
super,Keyword
.,Punctuation
doc,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
space,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
size,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
completeSchema,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
context,Identifier
(,Punctuation
),Punctuation
.,Punctuation
complete,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro Enum type with optional properties, namespace, doc, and
   * aliases.
   * <p/>
   * Set properties with {@link #prop(String, String)}, namespace with
   * {@link #namespace(String)}, doc with {@link #doc(String)}, and aliases with
   * {@link #aliases(String[])}.
   * <p/>
   * The Enum schema is finalized when its required symbols are set via
   * {@link #symbols(String[])}.
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
EnumBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
NamespacedBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
EnumBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
EnumBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
EnumBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
EnumBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
EnumBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** Configure this enum type's symbols, and end its configuration. **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
symbols,Identifier
(,Punctuation
String,Identifier
.,Punctuation
.,Punctuation
.,Punctuation
 ,Whitespace
symbols,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
createEnum,Identifier
(,Punctuation
name,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
doc,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
space,Identifier
(,Punctuation
),Punctuation
",",Punctuation
"
",Newline
          ,Whitespace
Arrays,Identifier
.,Punctuation
asList,Identifier
(,Punctuation
symbols,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
completeSchema,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
context,Identifier
(,Punctuation
),Punctuation
.,Punctuation
complete,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro Map type with optional properties.
   * <p/>
   * Set properties with {@link #prop(String, String)}.
   * <p/>
   * The Map schema's properties are finalized when {@link #values()} or
   * {@link #values(Schema)} is called.
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
MapBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
PropBuilder,Identifier
<,Operator
MapBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
MapBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
context,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
names,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
MapBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
MapBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
MapBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Return a type builder for configuring the map's nested values schema.
     * This builder will return control to the map's enclosing context when
     * complete.
     **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
TypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
values,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
TypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
new,Keyword
 ,Whitespace
MapCompletion,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
this,Keyword
",",Punctuation
 ,Whitespace
context,Identifier
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Complete configuration of this map, setting the schema of the map values
     * to the schema provided. Returns control to the enclosing context.
     **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
values,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
valueSchema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
MapCompletion,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
this,Keyword
",",Punctuation
 ,Whitespace
context,Identifier
),Punctuation
.,Punctuation
complete,Identifier
(,Punctuation
valueSchema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Builds an Avro Array type with optional properties.
   * <p/>
   * Set properties with {@link #prop(String, String)}.
   * <p/>
   * The Array schema's properties are finalized when {@link #items()} or
   * {@link #items(Schema)} is called.
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
ArrayBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
PropBuilder,Identifier
<,Operator
ArrayBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
ArrayBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
context,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
names,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
ArrayBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
ArrayBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
ArrayBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Return a type builder for configuring the array's nested items schema.
     * This builder will return control to the array's enclosing context when
     * complete.
     **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
TypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
items,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
TypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
new,Keyword
 ,Whitespace
ArrayCompletion,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
this,Keyword
",",Punctuation
 ,Whitespace
context,Identifier
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Complete configuration of this array, setting the schema of the array
     * items to the schema provided. Returns control to the enclosing context.
     **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
items,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
itemsSchema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
ArrayCompletion,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
this,Keyword
",",Punctuation
 ,Whitespace
context,Identifier
),Punctuation
.,Punctuation
complete,Identifier
(,Punctuation
itemsSchema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * internal class for passing the naming context around. This allows for the
   * following: 
   * <li>Cache and re-use primitive schemas when they do not set
   * properties.</li>
   * <li>Provide a default namespace for nested contexts (as
   * the JSON Schema spec does).</li>
   * <li>Allow previously defined named types or primitive types 
   * to be referenced by name.</li>
   **/",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Set,Identifier
<,Operator
String,Identifier
>,Operator
 ,Whitespace
PRIMITIVES,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
HashSet,Identifier
<,Operator
String,Identifier
>,Operator
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
PRIMITIVES,Identifier
.,Punctuation
add,Identifier
(,Punctuation
"""null""",String
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
PRIMITIVES,Identifier
.,Punctuation
add,Identifier
(,Punctuation
"""boolean""",String
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
PRIMITIVES,Identifier
.,Punctuation
add,Identifier
(,Punctuation
"""int""",String
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
PRIMITIVES,Identifier
.,Punctuation
add,Identifier
(,Punctuation
"""long""",String
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
PRIMITIVES,Identifier
.,Punctuation
add,Identifier
(,Punctuation
"""float""",String
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
PRIMITIVES,Identifier
.,Punctuation
add,Identifier
(,Punctuation
"""double""",String
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
PRIMITIVES,Identifier
.,Punctuation
add,Identifier
(,Punctuation
"""bytes""",String
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
PRIMITIVES,Identifier
.,Punctuation
add,Identifier
(,Punctuation
"""string""",String
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
HashMap,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
>,Operator
 ,Whitespace
schemas,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
namespace,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
NameContext,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
schemas,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
HashMap,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
>,Operator
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
namespace,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
      ,Whitespace
schemas,Identifier
.,Punctuation
put,Identifier
(,Punctuation
"""null""",String
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
create,Identifier
(,Punctuation
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
NULL,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
schemas,Identifier
.,Punctuation
put,Identifier
(,Punctuation
"""boolean""",String
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
create,Identifier
(,Punctuation
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
BOOLEAN,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
schemas,Identifier
.,Punctuation
put,Identifier
(,Punctuation
"""int""",String
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
create,Identifier
(,Punctuation
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
INT,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
schemas,Identifier
.,Punctuation
put,Identifier
(,Punctuation
"""long""",String
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
create,Identifier
(,Punctuation
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
LONG,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
schemas,Identifier
.,Punctuation
put,Identifier
(,Punctuation
"""float""",String
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
create,Identifier
(,Punctuation
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
FLOAT,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
schemas,Identifier
.,Punctuation
put,Identifier
(,Punctuation
"""double""",String
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
create,Identifier
(,Punctuation
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
DOUBLE,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
schemas,Identifier
.,Punctuation
put,Identifier
(,Punctuation
"""bytes""",String
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
create,Identifier
(,Punctuation
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
BYTES,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
schemas,Identifier
.,Punctuation
put,Identifier
(,Punctuation
"""string""",String
",",Punctuation
 ,Whitespace
Schema,Identifier
.,Punctuation
create,Identifier
(,Punctuation
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
STRING,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
NameContext,Identifier
(,Punctuation
HashMap,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
>,Operator
 ,Whitespace
schemas,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
namespace,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
schemas,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schemas,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
namespace,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
"""""",String
.,Punctuation
equals,Identifier
(,Punctuation
namespace,Identifier
),Punctuation
 ,Whitespace
?,Operator
 ,Whitespace
null,Keyword
 ,Whitespace
:,Operator
 ,Whitespace
namespace,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
namespace,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
namespace,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
NameContext,Identifier
(,Punctuation
schemas,Identifier
",",Punctuation
 ,Whitespace
namespace,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
get,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
namespace,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
getFullname,Identifier
(,Punctuation
resolveName,Identifier
(,Punctuation
name,Identifier
",",Punctuation
 ,Whitespace
namespace,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
getFullname,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fullName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schemas,Identifier
.,Punctuation
get,Identifier
(,Punctuation
fullName,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
(,Punctuation
schema,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
SchemaParseException,Identifier
(,Punctuation
"""Undefined name: """,String
 ,Whitespace
+,Operator
 ,Whitespace
fullName,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
schema,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
put,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
String,Identifier
 ,Whitespace
fullName,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schema,Identifier
.,Punctuation
getFullName,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
(,Punctuation
schemas,Identifier
.,Punctuation
containsKey,Identifier
(,Punctuation
fullName,Identifier
),Punctuation
),Punctuation
{,Punctuation
"
",Newline
        ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
SchemaParseException,Identifier
(,Punctuation
"""Can't redefine: """,String
 ,Whitespace
+,Operator
 ,Whitespace
fullName,Identifier
),Punctuation
;,Punctuation
"
",Newline
     ,Whitespace
},Punctuation
"
",Newline
     ,Whitespace
schemas,Identifier
.,Punctuation
put,Identifier
(,Punctuation
fullName,Identifier
",",Punctuation
 ,Whitespace
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
resolveName,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
space,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
PRIMITIVES,Identifier
.,Punctuation
contains,Identifier
(,Punctuation
name,Identifier
),Punctuation
 ,Whitespace
&&,Operator
 ,Whitespace
space,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
lastDot,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
name,Identifier
.,Punctuation
lastIndexOf,Identifier
(,Punctuation
'.',String
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
lastDot,Identifier
 ,Whitespace
<,Operator
 ,Whitespace
0,Literal
),Punctuation
 ,Whitespace
{,Punctuation
 ,Whitespace
// short name,Comment
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
space,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
space,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
namespace,Identifier
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
space,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
 ,Whitespace
&&,Operator
 ,Whitespace
!,Operator
"""""",String
.,Punctuation
equals,Identifier
(,Punctuation
space,Identifier
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
return,Keyword
 ,Whitespace
space,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
""".""",String
 ,Whitespace
+,Operator
 ,Whitespace
name,Identifier
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
 ,Whitespace
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
 ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * A common API for building types within a context. BaseTypeBuilder can build
   * all types other than Unions. {@link TypeBuilder} can additionally build
   * Unions.
   * <p/>
   * The builder has two contexts:
   * <li>A naming context provides a default namespace and allows for previously
   * defined named types to be referenced from {@link #type(String)}</li>
   * <li>A completion context representing the scope that the builder was
   * created in. A builder created in a nested context (for example,
   * {@link MapBuilder#values()} will have a completion context assigned by the
   * {@link MapBuilder}</li>
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
context,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
names,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
/** Use the schema provided as the type. **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
type,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
context,Identifier
.,Punctuation
complete,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Look up the type by name. This type must be previously defined in the
     * context of this builder.
     * <p/>
     * The name may be fully qualified or a short name. If it is a short name,
     * the default namespace of the current context will additionally be
     * searched.
     **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
type,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
type,Identifier
(,Punctuation
name,Identifier
",",Punctuation
 ,Whitespace
null,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Look up the type by name and namespace. This type must be previously
     * defined in the context of this builder.
     * <p/>
     * The name may be fully qualified or a short name. If it is a fully
     * qualified name, the namespace provided is ignored. If it is a short name,
     * the namespace provided is used if not null, else the default namespace of
     * the current context will be used.
     **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
type,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
namespace,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
type,Identifier
(,Punctuation
names,Identifier
.,Punctuation
get,Identifier
(,Punctuation
name,Identifier
",",Punctuation
 ,Whitespace
namespace,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain boolean type without custom properties. This is equivalent to:
     * <pre>
     * booleanBuilder().endBoolean();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
booleanType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
booleanBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endBoolean,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a boolean type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #booleanType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
BooleanBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
booleanBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
BooleanBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain int type without custom properties. This is equivalent to:
     * <pre>
     * intBuilder().endInt();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
intType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
intBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endInt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build an int type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #intType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
IntBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
intBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
IntBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * A plain long type without custom properties. This is equivalent to:
     * <pre>
     * longBuilder().endLong();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
longType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
longBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endLong,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a long type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #longType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
LongBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
longBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
LongBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain float type without custom properties. This is equivalent to:
     * <pre>
     * floatBuilder().endFloat();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
floatType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
floatBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endFloat,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a float type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #floatType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FloatBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
floatBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
FloatBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain double type without custom properties. This is equivalent to:
     * <pre>
     * doubleBuilder().endDouble();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
doubleType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
doubleBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endDouble,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a double type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #doubleType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
DoubleBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
doubleBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
DoubleBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain string type without custom properties. This is equivalent to:
     * <pre>
     * stringBuilder().endString();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
stringType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
stringBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endString,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a string type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #stringType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
StringBldr,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
stringBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
StringBldr,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain bytes type without custom properties. This is equivalent to:
     * <pre>
     * bytesBuilder().endBytes();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
bytesType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
bytesBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endBytes,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a bytes type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #bytesType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
BytesBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bytesBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
BytesBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain null type without custom properties. This is equivalent to:
     * <pre>
     * nullBuilder().endNull();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
nullType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
nullBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endNull,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a null type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #nullType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NullBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
NullBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** Build an Avro map type  Example usage:
     * <pre>
     * map().values().intType()
     * </pre>
     * Equivalent to Avro JSON Schema:
     * <pre>
     * {""type"":""map"", ""values"":""int""}
     * </pre>
     **/",Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
MapBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
map,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
MapBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** Build an Avro array type  Example usage:
     * <pre>
     * array().items().longType()
     * </pre>
     * Equivalent to Avro JSON Schema:
     * <pre>
     * {""type"":""array"", ""values"":""long""}
     * </pre>
     **/",Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
ArrayBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
array,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
ArrayBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** Build an Avro fixed type. Example usage:
     * <pre>
     * fixed(""com.foo.IPv4"").size(4)
     * </pre>
     * Equivalent to Avro JSON Schema:
     * <pre>
     * {""type"":""fixed"", ""name"":""com.foo.IPv4"", ""size"":4}
     * </pre>
     **/",Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FixedBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
fixed,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
FixedBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Build an Avro enum type. Example usage: 
     * <pre>
     * enumeration(""Suits"").namespace(""org.cards"").doc(""card suit names"")
     *   .symbols(""HEART"", ""SPADE"", ""DIAMOND"", ""CLUB"")
     * </pre>
     * Equivalent to Avro JSON Schema:
     * <pre>
     * {""type"":""enum"", ""name"":""Suits"", ""namespace"":""org.cards"",
     *  ""doc"":""card suit names"", ""symbols"":[
     *    ""HEART"", ""SPADE"", ""DIAMOND"", ""CLUB""]}
     * </pre>
     **/",Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
EnumBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
enumeration,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
EnumBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/** Build an Avro record type. Example usage:
     * <pre>
     * record(""com.foo.Foo"").fields()
     *   .name(""field1"").typeInt().intDefault(1)
     *   .name(""field2"").typeString().noDefault()
     *   .name(""field3"").optional().typeFixed(""FooFixed"").size(4)
     *   .endRecord()
     * </pre>
     * Equivalent to Avro JSON Schema:
     * <pre>
     * {""type"":""record"", ""name"":""com.foo.Foo"", ""fields"": [
     *   {""name"":""field1"", ""type"":""int"", ""default"":1},
     *   {""name"":""field2"", ""type"":""string""},
     *   {""name"":""field3"", ""type"":[
     *     null, {""type"":""fixed"", ""name"":""FooFixed"", ""size"":4}
     *     ]}
     *   ]}
     * </pre>
     **/",Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
RecordBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
record,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
RecordBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
 ,Whitespace
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Build an Avro union schema type. Example usage:
     * <pre>unionOf().stringType().and().bytesType().endUnion()</pre>
     **/",Comment
 ,Whitespace
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
unionOf,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
UnionBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** A shortcut for building a union of a type and null.
     * <p/>
     * For example, the code snippets below are equivalent:
     * <pre>nullable().booleanType()</pre>
     * <pre>unionOf().booleanType().and().nullType().endUnion()</pre>
     **/",Comment
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullable,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
new,Keyword
 ,Whitespace
NullableCompletion,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** A Builder for creating any Avro schema type. 
   **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
TypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
TypeBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
unionOf,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
unionOf,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullable,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
nullable,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** A special builder for unions.  Unions cannot nest unions directly **/,Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
UnionBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
UnionBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
new,Keyword
 ,Whitespace
ArrayList,Identifier
<,Operator
Schema,Identifier
>,Operator
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
UnionBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
UnionBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
UnionBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
List,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
schemas,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
new,Keyword
 ,Whitespace
UnionCompletion,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
schemas,Identifier
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * A special Builder for Record fields. The API is very similar to
   * {@link BaseTypeBuilder}. However, fields have their own names, properties,
   * and default values.
   * <p/>
   * The methods on this class create builder instances that return their
   * control to the {@link FieldAssembler} of the enclosing record context after
   * configuring a default for the field.
   * <p/>
   * For example, an int field with default value 1:
   * <pre>
   * intSimple().withDefault(1);
   * </pre>
   * or an array with items that are optional int types:
   * <pre>
   * array().items().optional().intType();
   * </pre>
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
BaseFieldTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bldr,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
CompletionWrapper,Identifier
 ,Whitespace
wrapper,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
BaseFieldTypeBuilder,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bldr,Identifier
",",Punctuation
 ,Whitespace
CompletionWrapper,Identifier
 ,Whitespace
wrapper,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
bldr,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
bldr,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
names,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
bldr,Identifier
.,Punctuation
names,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
wrapper,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
wrapper,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * A plain boolean type without custom properties. This is equivalent to:
     * <pre>
     * booleanBuilder().endBoolean();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
BooleanDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
booleanType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
booleanBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endBoolean,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a boolean type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #booleanType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
BooleanBuilder,Identifier
<,Operator
BooleanDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
booleanBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
BooleanBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
BooleanDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain int type without custom properties. This is equivalent to:
     * <pre>
     * intBuilder().endInt();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
IntDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
intType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
intBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endInt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build an int type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #intType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
IntBuilder,Identifier
<,Operator
IntDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
intBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
IntBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
IntDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * A plain long type without custom properties. This is equivalent to:
     * <pre>
     * longBuilder().endLong();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
LongDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
longType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
longBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endLong,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a long type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #longType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
LongBuilder,Identifier
<,Operator
LongDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
longBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
LongBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
LongDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain float type without custom properties. This is equivalent to:
     * <pre>
     * floatBuilder().endFloat();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FloatDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
floatType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
floatBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endFloat,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a float type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #floatType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FloatBuilder,Identifier
<,Operator
FloatDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
floatBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
FloatBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
FloatDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain double type without custom properties. This is equivalent to:
     * <pre>
     * doubleBuilder().endDouble();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
DoubleDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
doubleType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
doubleBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endDouble,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a double type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #doubleType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
DoubleBuilder,Identifier
<,Operator
DoubleDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
doubleBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
DoubleBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
DoubleDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain string type without custom properties. This is equivalent to:
     * <pre>
     * stringBuilder().endString();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
StringDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
stringType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
stringBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endString,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a string type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #stringType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
StringBldr,Identifier
<,Operator
StringDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
stringBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
StringBldr,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
StringDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain bytes type without custom properties. This is equivalent to:
     * <pre>
     * bytesBuilder().endBytes();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
BytesDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bytesType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
bytesBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endBytes,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a bytes type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #bytesType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
BytesBuilder,Identifier
<,Operator
BytesDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
bytesBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
BytesBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
BytesDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain null type without custom properties. This is equivalent to:
     * <pre>
     * nullBuilder().endNull();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NullDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
nullBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endNull,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a null type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #nullType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NullBuilder,Identifier
<,Operator
NullDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
nullBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
NullBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
NullDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Build an Avro map type **/,Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
MapBuilder,Identifier
<,Operator
MapDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
map,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
MapBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
MapDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Build an Avro array type **/,Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
ArrayBuilder,Identifier
<,Operator
ArrayDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
array,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
ArrayBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
ArrayDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Build an Avro fixed type. **/,Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FixedBuilder,Identifier
<,Operator
FixedDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
fixed,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
FixedBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
FixedDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
/** Build an Avro enum type. **/,Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
EnumBuilder,Identifier
<,Operator
EnumDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
enumeration,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
EnumBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
EnumDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Build an Avro record type. **/,Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
RecordBuilder,Identifier
<,Operator
RecordDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
record,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
RecordBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
wrap,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
RecordDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
 ,Whitespace
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
<,Operator
C,Identifier
>,Operator
 ,Whitespace
Completion,Identifier
<,Operator
C,Identifier
>,Operator
 ,Whitespace
wrap,Identifier
(,Punctuation
"
",Newline
       ,Whitespace
Completion,Identifier
<,Operator
C,Identifier
>,Operator
 ,Whitespace
completion,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
wrapper,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
return,Keyword
 ,Whitespace
wrapper,Identifier
.,Punctuation
wrap,Identifier
(,Punctuation
completion,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
completion,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/** FieldTypeBuilder adds {@link #unionOf()}, {@link #nullable()}, and {@link #optional()}
   * to BaseFieldTypeBuilder. **/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
FieldTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
BaseFieldTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FieldTypeBuilder,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bldr,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
bldr,Identifier
",",Punctuation
 ,Whitespace
null,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Build an Avro union schema type. **/,Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
UnionFieldTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
unionOf,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
UnionFieldTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A shortcut for building a union of a type and null, with an optional default
     * value of the non-null type.
     * <p/>
     * For example, the two code snippets below are equivalent:
     * <pre>nullable().booleanType().booleanDefault(true)</pre>
     * <pre>unionOf().booleanType().and().nullType().endUnion().booleanDefault(true)</pre>
     **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
BaseFieldTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullable,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
BaseFieldTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
",",Punctuation
 ,Whitespace
new,Keyword
 ,Whitespace
NullableCompletionWrapper,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A shortcut for building a union of null and a type, with a null default.
     * <p/>
     * For example, the two code snippets below are equivalent:
     * <pre>optional().booleanType()</pre>
     * <pre>unionOf().nullType().and().booleanType().endUnion().nullDefault()</pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
FieldAssembler,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
optional,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
FieldAssembler,Identifier
<,Operator
R,Identifier
>>,Operator
(,Punctuation
"
",Newline
          ,Whitespace
new,Keyword
 ,Whitespace
OptionalCompletion,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Builder for a union field.  The first type in the union corresponds
   * to the possible default value type.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
UnionFieldTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bldr,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
UnionFieldTypeBuilder,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bldr,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
bldr,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
bldr,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
names,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
bldr,Identifier
.,Punctuation
names,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * A plain boolean type without custom properties. This is equivalent to:
     * <pre>
     * booleanBuilder().endBoolean();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
UnionAccumulator,Identifier
<,Operator
BooleanDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
booleanType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
booleanBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endBoolean,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a boolean type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #booleanType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
BooleanBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
BooleanDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
booleanBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
BooleanBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
BooleanDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain int type without custom properties. This is equivalent to:
     * <pre>
     * intBuilder().endInt();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
UnionAccumulator,Identifier
<,Operator
IntDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
intType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
intBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endInt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build an int type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #intType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
IntBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
IntDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
intBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
IntBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
IntDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * A plain long type without custom properties. This is equivalent to:
     * <pre>
     * longBuilder().endLong();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
UnionAccumulator,Identifier
<,Operator
LongDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
longType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
longBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endLong,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a long type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #longType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
LongBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
LongDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
longBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
LongBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
LongDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain float type without custom properties. This is equivalent to:
     * <pre>
     * floatBuilder().endFloat();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
UnionAccumulator,Identifier
<,Operator
FloatDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
floatType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
floatBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endFloat,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a float type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #floatType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FloatBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
FloatDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
floatBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
FloatBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
FloatDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain double type without custom properties. This is equivalent to:
     * <pre>
     * doubleBuilder().endDouble();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
UnionAccumulator,Identifier
<,Operator
DoubleDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
doubleType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
doubleBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endDouble,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a double type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #doubleType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
DoubleBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
DoubleDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
doubleBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
DoubleBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
DoubleDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain string type without custom properties. This is equivalent to:
     * <pre>
     * stringBuilder().endString();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
UnionAccumulator,Identifier
<,Operator
StringDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
stringType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
stringBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endString,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a string type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #stringType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
StringBldr,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
StringDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
stringBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
StringBldr,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
StringDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain bytes type without custom properties. This is equivalent to:
     * <pre>
     * bytesBuilder().endBytes();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
UnionAccumulator,Identifier
<,Operator
BytesDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
bytesType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
bytesBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endBytes,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a bytes type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #bytesType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
BytesBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
BytesDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
bytesBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
BytesBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
BytesDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * A plain null type without custom properties. This is equivalent to:
     * <pre>
     * nullBuilder().endNull();
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
UnionAccumulator,Identifier
<,Operator
NullDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
nullType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
nullBuilder,Identifier
(,Punctuation
),Punctuation
.,Punctuation
endNull,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Build a null type that can set custom properties. If custom properties
     * are not needed it is simpler to use {@link #nullType()}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
NullBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
NullDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
nullBuilder,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
NullBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
NullDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Build an Avro map type **/,Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
MapBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
MapDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
map,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
MapBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
MapDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Build an Avro array type **/,Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
ArrayBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
ArrayDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
array,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
ArrayBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
ArrayDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Build an Avro fixed type. **/,Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FixedBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
FixedDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
fixed,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
FixedBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
FixedDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
/** Build an Avro enum type. **/,Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
EnumBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
EnumDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
enumeration,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
EnumBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
EnumDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Build an Avro record type. **/,Comment
 ,Whitespace
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
RecordBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
RecordDefault,Identifier
<,Operator
R,Identifier
>>>,Operator
 ,Whitespace
record,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
RecordBuilder,Identifier
.,Punctuation
create,Identifier
(,Punctuation
completion,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
RecordDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
bldr,Identifier
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
 ,Whitespace
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
<,Operator
C,Identifier
>,Operator
 ,Whitespace
UnionCompletion,Identifier
<,Operator
C,Identifier
>,Operator
 ,Whitespace
completion,Identifier
(,Punctuation
Completion,Identifier
<,Operator
C,Identifier
>,Operator
 ,Whitespace
context,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
UnionCompletion,Identifier
<,Operator
C,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
new,Keyword
 ,Whitespace
ArrayList,Identifier
<,Operator
Schema,Identifier
>,Operator
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
RecordBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
NamespacedBuilder,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
RecordBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
RecordBuilder,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
RecordBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
create,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
"
",Newline
        ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
RecordBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
RecordBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
fields,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
record,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
createRecord,Identifier
(,Punctuation
name,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
doc,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
space,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
false,Keyword
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
"// place the record in the name context, fields yet to be set.",Comment
"
",Newline
      ,Whitespace
completeSchema,Identifier
(,Punctuation
record,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
"
",Newline
          ,Whitespace
context,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
names,Identifier
(,Punctuation
),Punctuation
.,Punctuation
namespace,Identifier
(,Punctuation
record,Identifier
.,Punctuation
getNamespace,Identifier
(,Punctuation
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
record,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
List,Identifier
<,Operator
Field,Identifier
>,Operator
 ,Whitespace
fields,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
ArrayList,Identifier
<,Operator
Field,Identifier
>,Operator
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
record,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FieldAssembler,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
 ,Whitespace
record,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
context,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
names,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
record,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
record,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Add a field with the given name.
     * @return A {@link FieldBuilder} for the given name.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
name,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
this,Keyword
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
fieldName,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a boolean field with the given name and no default.
     * <p/>This is equivalent to:
     * <pre>
     *   name(fieldName).type().booleanType().noDefault()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
requiredBoolean,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
booleanType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
noDefault,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating an optional boolean field: a union of null and 
     * boolean with null default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().optional().booleanType()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
optionalBoolean,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
optional,Identifier
(,Punctuation
),Punctuation
.,Punctuation
booleanType,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a nullable boolean field: a union of boolean and
     * null with an boolean default.
     * <p/>
     * This is equivalent to:
     * 
     * <pre>
     * name(fieldName).type().nullable().booleanType().booleanDefault(defaultVal)
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullableBoolean,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
",",Punctuation
 ,Whitespace
boolean,Keyword
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
"
",Newline
          ,Whitespace
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
nullable,Identifier
(,Punctuation
),Punctuation
.,Punctuation
booleanType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
booleanDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating an int field with the given name and no default.
     * <p/>This is equivalent to:
     * <pre>
     *   name(fieldName).type().intType().noDefault()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
requiredInt,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
intType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
noDefault,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating an optional int field: a union of null and int
     * with null default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().optional().intType()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
optionalInt,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
optional,Identifier
(,Punctuation
),Punctuation
.,Punctuation
intType,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a nullable int field: a union of int and null
     * with an int default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().nullable().intType().intDefault(defaultVal)
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullableInt,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
nullable,Identifier
(,Punctuation
),Punctuation
.,Punctuation
intType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
intDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a long field with the given name and no default.
     * <p/>This is equivalent to:
     * <pre>
     *   name(fieldName).type().longType().noDefault()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
requiredLong,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
longType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
noDefault,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating an optional long field: a union of null and long
     * with null default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().optional().longType()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
optionalLong,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
optional,Identifier
(,Punctuation
),Punctuation
.,Punctuation
longType,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a nullable long field: a union of long and null
     * with a long default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().nullable().longType().longDefault(defaultVal)
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullableLong,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
",",Punctuation
 ,Whitespace
long,Keyword
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
nullable,Identifier
(,Punctuation
),Punctuation
.,Punctuation
longType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
longDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a float field with the given name and no default.
     * <p/>This is equivalent to:
     * <pre>
     *   name(fieldName).type().floatType().noDefault()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
requiredFloat,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
floatType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
noDefault,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating an optional float field: a union of null and float
     * with null default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().optional().floatType()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
optionalFloat,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
optional,Identifier
(,Punctuation
),Punctuation
.,Punctuation
floatType,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a nullable float field: a union of float and null
     * with a float default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().nullable().floatType().floatDefault(defaultVal)
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullableFloat,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
",",Punctuation
 ,Whitespace
float,Keyword
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
nullable,Identifier
(,Punctuation
),Punctuation
.,Punctuation
floatType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
floatDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a double field with the given name and no default.
     * <p/>This is equivalent to:
     * <pre>
     *   name(fieldName).type().doubleType().noDefault()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
requiredDouble,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
doubleType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
noDefault,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating an optional double field: a union of null and double
     * with null default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().optional().doubleType()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
optionalDouble,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
optional,Identifier
(,Punctuation
),Punctuation
.,Punctuation
doubleType,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a nullable double field: a union of double and null
     * with a double default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().nullable().doubleType().doubleDefault(defaultVal)
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullableDouble,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
",",Punctuation
 ,Whitespace
double,Keyword
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
nullable,Identifier
(,Punctuation
),Punctuation
.,Punctuation
doubleType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
doubleDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a string field with the given name and no default.
     * <p/>This is equivalent to:
     * <pre>
     *   name(fieldName).type().stringType().noDefault()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
requiredString,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
stringType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
noDefault,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating an optional string field: a union of null and string
     * with null default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().optional().stringType()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
optionalString,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
optional,Identifier
(,Punctuation
),Punctuation
.,Punctuation
stringType,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a nullable string field: a union of string and null
     * with a string default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().nullable().stringType().stringDefault(defaultVal)
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullableString,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
nullable,Identifier
(,Punctuation
),Punctuation
.,Punctuation
stringType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
stringDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a bytes field with the given name and no default.
     * <p/>This is equivalent to:
     * <pre>
     *   name(fieldName).type().bytesType().noDefault()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
requiredBytes,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
bytesType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
noDefault,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating an optional bytes field: a union of null and bytes
     * with null default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().optional().bytesType()
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
optionalBytes,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
optional,Identifier
(,Punctuation
),Punctuation
.,Punctuation
bytesType,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Shortcut for creating a nullable bytes field: a union of bytes and null
     * with a bytes default.<p/>
     * This is equivalent to:
     * <pre>
     *   name(fieldName).type().nullable().bytesType().bytesDefault(defaultVal)
     * </pre>
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullableBytes,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
fieldName,Identifier
",",Punctuation
 ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
name,Identifier
(,Punctuation
fieldName,Identifier
),Punctuation
.,Punctuation
type,Identifier
(,Punctuation
),Punctuation
.,Punctuation
nullable,Identifier
(,Punctuation
),Punctuation
.,Punctuation
bytesType,Identifier
(,Punctuation
),Punctuation
.,Punctuation
bytesDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * End adding fields to this record, returning control
     * to the context that this record builder was created in.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
endRecord,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
record,Identifier
.,Punctuation
setFields,Identifier
(,Punctuation
fields,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
context,Identifier
.,Punctuation
complete,Identifier
(,Punctuation
record,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
addField,Identifier
(,Punctuation
Field,Identifier
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
fields,Identifier
.,Punctuation
add,Identifier
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Builds a Field in the context of a {@link FieldAssembler}.
   * 
   * Usage is to first configure any of the optional parameters and then to call one
   * of the type methods to complete the field.  For example
   * <pre>
   *   .namespace(""org.apache.example"").orderDecending().type()
   * </pre>
   * Optional parameters for a field are namespace, doc, order, and aliases.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
NamedBuilder,Identifier
<,Operator
FieldBuilder,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
fields,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
Schema,Identifier
.,Punctuation
Field,Identifier
.,Punctuation
Order,Identifier
 ,Whitespace
order,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
Field,Identifier
.,Punctuation
Order,Identifier
.,Punctuation
ASCENDING,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FieldBuilder,Identifier
(,Punctuation
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
fields,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
names,Identifier
",",Punctuation
 ,Whitespace
name,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
fields,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
fields,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
/** Set this field to have ascending order.  Ascending is the default **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
orderAscending,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
order,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
Field,Identifier
.,Punctuation
Order,Identifier
.,Punctuation
ASCENDING,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
/** Set this field to have decending order.  Decending is the default **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
orderDescending,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
order,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
Field,Identifier
.,Punctuation
Order,Identifier
.,Punctuation
DESCENDING,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Set this field to ignore order.  **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
orderIgnore,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
order,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
Field,Identifier
.,Punctuation
Order,Identifier
.,Punctuation
IGNORE,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Final step in configuring this field, finalizing name, namespace, alias,
     * and order.
     * @return A builder for the field's type and default value.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
type,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
FieldTypeBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
this,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Final step in configuring this field, finalizing name, namespace, alias,
     * and order.  Sets the field's type to the provided schema, returns a 
     * {@link GenericDefault}.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
GenericDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
type,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
type,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
GenericDefault,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
this,Keyword
",",Punctuation
 ,Whitespace
type,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Final step in configuring this field, finalizing name, namespace, alias,
     * and order. Sets the field's type to the schema by name reference.
     * <p/>
     * The name must correspond with a named schema that has already been
     * created in the context of this builder. The name may be a fully qualified
     * name, or a short name. If it is a short name, the namespace context of
     * this builder will be used.
     * <p/>
     * The name and namespace context rules are the same as the Avro schema JSON
     * specification.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
GenericDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
type,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
type,Identifier
(,Punctuation
name,Identifier
",",Punctuation
 ,Whitespace
null,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"/**
     * Final step in configuring this field, finalizing name, namespace, alias,
     * and order. Sets the field's type to the schema by name reference.
     * <p/>
     * The name must correspond with a named schema that has already been
     * created in the context of this builder. The name may be a fully qualified
     * name, or a short name. If it is a full name, the namespace is ignored. If
     * it is a short name, the namespace provided is used. If the namespace
     * provided is null, the namespace context of this builder will be used.
     * <p/>
     * The name and namespace context rules are the same as the Avro schema JSON
     * specification.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
GenericDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
type,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
name,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
namespace,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
names,Identifier
(,Punctuation
),Punctuation
.,Punctuation
get,Identifier
(,Punctuation
name,Identifier
",",Punctuation
 ,Whitespace
namespace,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
type,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
completeField,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
",",Punctuation
 ,Whitespace
Object,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
JsonNode,Identifier
 ,Whitespace
defaultNode,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
toJsonNode,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
completeField,Identifier
(,Punctuation
schema,Identifier
",",Punctuation
 ,Whitespace
defaultNode,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
completeField,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
completeField,Identifier
(,Punctuation
schema,Identifier
",",Punctuation
 ,Whitespace
null,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
completeField,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
",",Punctuation
 ,Whitespace
JsonNode,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Field,Identifier
 ,Whitespace
field,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
Field,Identifier
(,Punctuation
name,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
schema,Identifier
",",Punctuation
 ,Whitespace
doc,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
defaultVal,Identifier
",",Punctuation
 ,Whitespace
order,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
addPropsTo,Identifier
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
addAliasesTo,Identifier
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
fields,Identifier
.,Punctuation
addField,Identifier
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
  ,Whitespace
/** Abstract base class for field defaults. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
S,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
S,Identifier
>>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
S,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
FieldDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
field,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
field,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
/** Completes this field with no default value **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
noDefault,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
field,Identifier
.,Punctuation
completeField,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
usingDefault,Identifier
(,Punctuation
Object,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
field,Identifier
.,Punctuation
completeField,Identifier
(,Punctuation
schema,Identifier
",",Punctuation
 ,Whitespace
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
S,Identifier
 ,Whitespace
complete,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schema,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
abstract,Keyword
 ,Whitespace
S,Identifier
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
BooleanDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
BooleanDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
BooleanDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Completes this field with the default value provided **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
booleanDefault,Identifier
(,Punctuation
boolean,Keyword
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
BooleanDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
IntDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
IntDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
IntDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Completes this field with the default value provided **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
intDefault,Identifier
(,Punctuation
int,Keyword
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
IntDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
LongDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
LongDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
LongDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Completes this field with the default value provided **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
longDefault,Identifier
(,Punctuation
long,Keyword
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
LongDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
FloatDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
FloatDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FloatDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Completes this field with the default value provided **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
floatDefault,Identifier
(,Punctuation
float,Keyword
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
FloatDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
DoubleDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
DoubleDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
DoubleDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Completes this field with the default value provided **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
doubleDefault,Identifier
(,Punctuation
double,Keyword
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
DoubleDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
StringDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
StringDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
StringDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Completes this field with the default value provided. Cannot be null. **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
stringDefault,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
StringDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
BytesDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
BytesDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
BytesDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Completes this field with the default value provided, cannot be null **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bytesDefault,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
ByteBuffer,Identifier
.,Punctuation
wrap,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Completes this field with the default value provided, cannot be null **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bytesDefault,Identifier
(,Punctuation
ByteBuffer,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Completes this field with the default value provided, cannot be null.
     * The string is interpreted as a byte[], with each character code point
     * value equalling the byte value, as in the Avro spec JSON default. **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bytesDefault,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
  ,Whitespace
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
BytesDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
NullDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
NullDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
NullDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Completes this field with a default value of null **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
nullDefault,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
null,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
NullDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
MapDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
MapDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
MapDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Completes this field with the default value provided, cannot be null **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
<,Operator
K,Identifier
",",Punctuation
 ,Whitespace
V,Identifier
>,Operator
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
mapDefault,Identifier
(,Punctuation
Map,Identifier
<,Operator
K,Identifier
",",Punctuation
 ,Whitespace
V,Identifier
>,Operator
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
MapDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
ArrayDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
ArrayDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
ArrayDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Completes this field with the default value provided, cannot be null **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
<,Operator
V,Identifier
>,Operator
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
arrayDefault,Identifier
(,Punctuation
List,Identifier
<,Operator
V,Identifier
>,Operator
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
ArrayDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
FixedDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
FixedDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
FixedDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Completes this field with the default value provided, cannot be null **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
fixedDefault,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
ByteBuffer,Identifier
.,Punctuation
wrap,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Completes this field with the default value provided, cannot be null **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
fixedDefault,Identifier
(,Punctuation
ByteBuffer,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Completes this field with the default value provided, cannot be null.
     * The string is interpreted as a byte[], with each character code point
     * value equalling the byte value, as in the Avro spec JSON default. **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
fixedDefault,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
  ,Whitespace
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
FixedDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
EnumDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
EnumDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
EnumDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Completes this field with the default value provided, cannot be null **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
enumDefault,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
EnumDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
/** Choose whether to use a default value for the field or not. **/,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
RecordDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
FieldDefault,Identifier
<,Operator
R,Identifier
",",Punctuation
 ,Whitespace
RecordDefault,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
RecordDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
field,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Completes this field with the default value provided, cannot be null **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
recordDefault,Identifier
(,Punctuation
GenericRecord,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
super,Keyword
.,Punctuation
usingDefault,Identifier
(,Punctuation
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
RecordDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
self,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
GenericDefault,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
GenericDefault,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
field,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
field,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
field,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schema,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
/** Do not use a default value for this field. **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
noDefault,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
field,Identifier
.,Punctuation
completeField,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/** Completes this field with the default value provided.
     * The value must conform to the schema of the field. **/",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
withDefault,Identifier
(,Punctuation
Object,Identifier
 ,Whitespace
defaultVal,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
field,Identifier
.,Punctuation
completeField,Identifier
(,Punctuation
schema,Identifier
",",Punctuation
 ,Whitespace
defaultVal,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/** 
   * Completion<R> is for internal builder use, all subclasses are private.
   * 
   * Completion is an object that takes a Schema and returns some result.
   */",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
abstract,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
complete,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
SchemaCompletion,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
complete,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
schema,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
NULL_SCHEMA,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
create,Identifier
(,Punctuation
Schema,Identifier
.,Punctuation
Type,Identifier
.,Punctuation
NULL,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
NullableCompletion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
NullableCompletion,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
context,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
complete,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
// wrap the schema as a union of the schema and null,Comment
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
nullable,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
createUnion,Identifier
(,Punctuation
Arrays,Identifier
.,Punctuation
asList,Identifier
(,Punctuation
schema,Identifier
",",Punctuation
 ,Whitespace
NULL_SCHEMA,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
context,Identifier
.,Punctuation
complete,Identifier
(,Punctuation
nullable,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
OptionalCompletion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
FieldAssembler,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bldr,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
OptionalCompletion,Identifier
(,Punctuation
FieldBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
bldr,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
bldr,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
bldr,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
FieldAssembler,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
complete,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
// wrap the schema as a union of null and the schema,Comment
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
optional,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
createUnion,Identifier
(,Punctuation
Arrays,Identifier
.,Punctuation
asList,Identifier
(,Punctuation
NULL_SCHEMA,Identifier
",",Punctuation
 ,Whitespace
schema,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
bldr,Identifier
.,Punctuation
completeField,Identifier
(,Punctuation
optional,Identifier
",",Punctuation
 ,Whitespace
(,Punctuation
Object,Identifier
),Punctuation
null,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
CompletionWrapper,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
abstract,Keyword
 ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
wrap,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
completion,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
NullableCompletionWrapper,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
CompletionWrapper,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
<,Operator
R,Identifier
>,Operator
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
wrap,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
completion,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
NullableCompletion,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
completion,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
NestedCompletion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
PropBuilder,Identifier
<,Operator
?,Operator
>,Operator
 ,Whitespace
assembler,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
NestedCompletion,Identifier
(,Punctuation
PropBuilder,Identifier
<,Operator
?,Operator
>,Operator
 ,Whitespace
assembler,Identifier
",",Punctuation
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
context,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
assembler,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
assembler,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
complete,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
outer,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
outerSchema,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
assembler,Identifier
.,Punctuation
addPropsTo,Identifier
(,Punctuation
outer,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
context,Identifier
.,Punctuation
complete,Identifier
(,Punctuation
outer,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
outerSchema,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
inner,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
MapCompletion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
NestedCompletion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
MapCompletion,Identifier
(,Punctuation
MapBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
assembler,Identifier
",",Punctuation
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
assembler,Identifier
",",Punctuation
 ,Whitespace
context,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
outerSchema,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
inner,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
Schema,Identifier
.,Punctuation
createMap,Identifier
(,Punctuation
inner,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
ArrayCompletion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
NestedCompletion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
ArrayCompletion,Identifier
(,Punctuation
ArrayBuilder,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
assembler,Identifier
",",Punctuation
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
super,Keyword
(,Punctuation
assembler,Identifier
",",Punctuation
 ,Whitespace
context,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
outerSchema,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
inner,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
Schema,Identifier
.,Punctuation
createArray,Identifier
(,Punctuation
inner,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
UnionCompletion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
extends,Keyword
"
",Newline
      ,Whitespace
Completion,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
List,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
schemas,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
UnionCompletion,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
List,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
schemas,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
context,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
names,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
schemas,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schemas,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
UnionAccumulator,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
complete,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
List,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
updated,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
ArrayList,Identifier
<,Operator
Schema,Identifier
>,Operator
(,Punctuation
this,Keyword
.,Punctuation
schemas,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
updated,Identifier
.,Punctuation
add,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
UnionAccumulator,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
updated,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/** Accumulates all of the types in a union.  Add an additional type with
   * {@link #and()}.  Complete the union with {@link #endUnion()}
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
UnionAccumulator,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
List,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
schemas,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
UnionAccumulator,Identifier
(,Punctuation
Completion,Identifier
<,Operator
R,Identifier
>,Operator
 ,Whitespace
context,Identifier
",",Punctuation
 ,Whitespace
NameContext,Identifier
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
List,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
schemas,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
context,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
context,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
names,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
names,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
schemas,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schemas,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Add an additional type to this union **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
BaseTypeBuilder,Identifier
<,Operator
UnionAccumulator,Identifier
<,Operator
R,Identifier
>>,Operator
 ,Whitespace
and,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
UnionBuilder,Identifier
<,Operator
R,Identifier
>,Operator
(,Punctuation
context,Identifier
",",Punctuation
 ,Whitespace
names,Identifier
",",Punctuation
 ,Whitespace
schemas,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
/** Complete this union **/,Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
R,Identifier
 ,Whitespace
endUnion,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Schema,Identifier
.,Punctuation
createUnion,Identifier
(,Punctuation
schemas,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
context,Identifier
.,Punctuation
complete,Identifier
(,Punctuation
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
checkRequired,Identifier
(,Punctuation
Object,Identifier
 ,Whitespace
reference,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
errorMessage,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
reference,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
NullPointerException,Identifier
(,Punctuation
errorMessage,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
// create default value JsonNodes from objects,Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
JsonNode,Identifier
 ,Whitespace
toJsonNode,Identifier
(,Punctuation
Object,Identifier
 ,Whitespace
o,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
String,Identifier
 ,Whitespace
s,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
o,Identifier
 ,Whitespace
instanceof,Keyword
 ,Whitespace
ByteBuffer,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
// special case since GenericData.toString() is incorrect for bytes,Comment
"
",Newline
        ,Whitespace
// note that this does not handle the case of a default value with nested bytes,Comment
"
",Newline
        ,Whitespace
ByteBuffer,Identifier
 ,Whitespace
bytes,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
(,Punctuation
ByteBuffer,Identifier
),Punctuation
 ,Whitespace
o,Identifier
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
bytes,Identifier
.,Punctuation
mark,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
data,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
byte,Keyword
[,Punctuation
bytes,Identifier
.,Punctuation
remaining,Identifier
(,Punctuation
),Punctuation
],Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
bytes,Identifier
.,Punctuation
get,Identifier
(,Punctuation
data,Identifier
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
bytes,Identifier
.,Punctuation
reset,Identifier
(,Punctuation
),Punctuation
;,Punctuation
 ,Whitespace
// put the buffer back the way we got it,Comment
"
",Newline
        ,Whitespace
s,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
String,Identifier
(,Punctuation
data,Identifier
",",Punctuation
 ,Whitespace
"""ISO-8859-1""",String
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
char,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
quoted,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
JsonStringEncoder,Identifier
.,Punctuation
getInstance,Identifier
(,Punctuation
),Punctuation
.,Punctuation
quoteAsString,Identifier
(,Punctuation
s,Identifier
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
s,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
"""\""""",String
 ,Whitespace
+,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
String,Identifier
(,Punctuation
quoted,Identifier
),Punctuation
 ,Whitespace
+,Operator
 ,Whitespace
"""\""""",String
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
 ,Whitespace
else,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
s,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
GenericData,Identifier
.,Punctuation
get,Identifier
(,Punctuation
),Punctuation
.,Punctuation
toString,Identifier
(,Punctuation
o,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
ObjectMapper,Identifier
(,Punctuation
),Punctuation
.,Punctuation
readTree,Identifier
(,Punctuation
s,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
catch,Keyword
 ,Whitespace
(,Punctuation
IOException,Identifier
 ,Whitespace
e,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
SchemaBuilderException,Identifier
(,Punctuation
e,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
},Punctuation
"
",Newline
