Text,Token
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",Comment
"
",Newline
package,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
io,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
IOException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
InputStream,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
Schema,Identifier
;,Punctuation
"
",Newline
"
",Newline
"/**
 * A factory for creating and configuring {@link Decoder}s.
 * <p/>
 * Factories are thread-safe, and are generally cached by applications for
 * performance reasons. Multiple instances are only required if multiple
 * concurrent configurations are needed.
 * 
 * @see Decoder
 */",Comment
"
",Newline
"
",Newline
public,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
DecoderFactory,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
DecoderFactory,Identifier
 ,Whitespace
DEFAULT_FACTORY,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
DefaultDecoderFactory,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
DEFAULT_BUFFER_SIZE,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
8192,Literal
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
int,Keyword
 ,Whitespace
binaryDecoderBufferSize,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
DEFAULT_BUFFER_SIZE,Identifier
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Constructor for factory instances */,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
DecoderFactory,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
super,Keyword
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * @deprecated use the equivalent {@link #get()} instead
   */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
Deprecated,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
DecoderFactory,Identifier
 ,Whitespace
defaultFactory,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
get,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Returns an immutable static DecoderFactory configured with default settings
   * All mutating methods throw IllegalArgumentExceptions. All creator methods
   * create objects with default settings.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
DecoderFactory,Identifier
 ,Whitespace
get,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
DEFAULT_FACTORY,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Configures this factory to use the specified buffer size when creating
   * Decoder instances that buffer their input. The default buffer size is
   * 8192 bytes.
   * 
   * @param size The preferred buffer size. Valid values are in the range [32,
   *          16*1024*1024]. Values outside this range are rounded to the nearest
   *          value in the range. Values less than 512 or greater than 1024*1024
   *          are not recommended.
   * @return This factory, to enable method chaining:
   * <pre>
   * DecoderFactory myFactory = new DecoderFactory().useBinaryDecoderBufferSize(4096);
   * </pre>
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
DecoderFactory,Identifier
 ,Whitespace
configureDecoderBufferSize,Identifier
(,Punctuation
int,Keyword
 ,Whitespace
size,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
size,Identifier
 ,Whitespace
<,Operator
 ,Whitespace
32,Literal
),Punctuation
"
",Newline
      ,Whitespace
size,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
32,Literal
;,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
size,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
16,Literal
 ,Whitespace
*,Operator
 ,Whitespace
1024,Literal
 ,Whitespace
*,Operator
 ,Whitespace
1024,Literal
),Punctuation
"
",Newline
      ,Whitespace
size,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
16,Literal
 ,Whitespace
*,Operator
 ,Whitespace
1024,Literal
 ,Whitespace
*,Operator
 ,Whitespace
1024,Literal
;,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
.,Punctuation
binaryDecoderBufferSize,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
size,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Returns this factory's configured preferred buffer size.  Used when creating
   * Decoder instances that buffer. See {@link #configureDecoderBufferSize}
   * @return The preferred buffer size, in bytes.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
getConfiguredBufferSize,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
.,Punctuation
binaryDecoderBufferSize,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/** @deprecated use the equivalent
   *  {@link #binaryDecoder(InputStream, BinaryDecoder)} instead */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
Deprecated,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
createBinaryDecoder,Identifier
(,Punctuation
InputStream,Identifier
 ,Whitespace
in,Identifier
",",Punctuation
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
reuse,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
binaryDecoder,Identifier
(,Punctuation
in,Identifier
",",Punctuation
 ,Whitespace
reuse,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Creates or reinitializes a {@link BinaryDecoder} with the input stream
   * provided as the source of data. If <i>reuse</i> is provided, it will be
   * reinitialized to the given input stream.
   * <p/>
   * {@link BinaryDecoder} instances returned by this method buffer their input,
   * reading up to {@link #getConfiguredBufferSize()} bytes past the minimum
   * required to satisfy read requests in order to achieve better performance.
   * If the buffering is not desired, use
   * {@link #directBinaryDecoder(InputStream, BinaryDecoder)}.
   * <p/>
   * {@link BinaryDecoder#inputStream()} provides a view on the data that is
   * buffer-aware, for users that need to interleave access to data
   * with the Decoder API.
   * 
   * @param in
   *          The InputStream to initialize to
   * @param reuse
   *          The BinaryDecoder to <i>attempt</i> to reuse given the factory
   *          configuration. A BinaryDecoder implementation may not be
   *          compatible with reuse, causing a new instance to be returned. If
   *          null, a new instance is returned.
   * @return A BinaryDecoder that uses <i>in</i> as its source of data. If
   *         <i>reuse</i> is null, this will be a new instance. If <i>reuse</i>
   *         is not null, then it may be reinitialized if compatible, otherwise
   *         a new instance will be returned.
   * @see BinaryDecoder
   * @see Decoder
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
binaryDecoder,Identifier
(,Punctuation
InputStream,Identifier
 ,Whitespace
in,Identifier
",",Punctuation
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
reuse,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
null,Keyword
 ,Whitespace
==,Operator
 ,Whitespace
reuse,Identifier
 ,Whitespace
||,Operator
 ,Whitespace
!,Operator
reuse,Identifier
.,Punctuation
getClass,Identifier
(,Punctuation
),Punctuation
.,Punctuation
equals,Identifier
(,Punctuation
BinaryDecoder,Identifier
.,Punctuation
class,Keyword
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
BinaryDecoder,Identifier
(,Punctuation
in,Identifier
",",Punctuation
 ,Whitespace
binaryDecoderBufferSize,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
else,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
(,Punctuation
(,Punctuation
BinaryDecoder,Identifier
),Punctuation
reuse,Identifier
),Punctuation
.,Punctuation
configure,Identifier
(,Punctuation
in,Identifier
",",Punctuation
 ,Whitespace
binaryDecoderBufferSize,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Creates or reinitializes a {@link BinaryDecoder} with the input stream
   * provided as the source of data. If <i>reuse</i> is provided, it will be
   * reinitialized to the given input stream.
   * <p/>
   * {@link BinaryDecoder} instances returned by this method do not buffer their input.
   * In most cases a buffering BinaryDecoder is sufficient in combination with
   * {@link BinaryDecoder#inputStream()} which provides a buffer-aware view on
   * the data.
   * <p/>
   * A ""direct"" BinaryDecoder does not read ahead from an InputStream or other data source
   * that cannot be rewound.  From the perspective of a client, a ""direct"" decoder
   * must never read beyond the minimum necessary bytes to service a {@link BinaryDecoder}
   * API read request.  
   * <p/>
   * In the case that the improved performance of a buffering implementation does not outweigh the
   * inconvenience of its buffering semantics, a ""direct"" decoder can be
   * used.
   * @param in
   *          The InputStream to initialize to
   * @param reuse
   *          The BinaryDecoder to <i>attempt</i> to reuse given the factory
   *          configuration. A BinaryDecoder implementation may not be
   *          compatible with reuse, causing a new instance to be returned. If
   *          null, a new instance is returned.
   * @return A BinaryDecoder that uses <i>in</i> as its source of data. If
   *         <i>reuse</i> is null, this will be a new instance. If <i>reuse</i>
   *         is not null, then it may be reinitialized if compatible, otherwise
   *         a new instance will be returned.
   * @see DirectBinaryDecoder
   * @see Decoder
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
directBinaryDecoder,Identifier
(,Punctuation
InputStream,Identifier
 ,Whitespace
in,Identifier
",",Punctuation
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
reuse,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
null,Keyword
 ,Whitespace
==,Operator
 ,Whitespace
reuse,Identifier
 ,Whitespace
||,Operator
 ,Whitespace
!,Operator
reuse,Identifier
.,Punctuation
getClass,Identifier
(,Punctuation
),Punctuation
.,Punctuation
equals,Identifier
(,Punctuation
DirectBinaryDecoder,Identifier
.,Punctuation
class,Keyword
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
DirectBinaryDecoder,Identifier
(,Punctuation
in,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
else,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
(,Punctuation
(,Punctuation
DirectBinaryDecoder,Identifier
),Punctuation
reuse,Identifier
),Punctuation
.,Punctuation
configure,Identifier
(,Punctuation
in,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** @deprecated use {@link #binaryDecoder(byte[], int, int, BinaryDecoder)}
   * instead */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
Deprecated,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
createBinaryDecoder,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
bytes,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
offset,Identifier
",",Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
length,Identifier
",",Punctuation
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
reuse,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
null,Keyword
 ,Whitespace
==,Operator
 ,Whitespace
reuse,Identifier
 ,Whitespace
||,Operator
 ,Whitespace
!,Operator
reuse,Identifier
.,Punctuation
getClass,Identifier
(,Punctuation
),Punctuation
.,Punctuation
equals,Identifier
(,Punctuation
BinaryDecoder,Identifier
.,Punctuation
class,Keyword
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
BinaryDecoder,Identifier
(,Punctuation
bytes,Identifier
",",Punctuation
 ,Whitespace
offset,Identifier
",",Punctuation
 ,Whitespace
length,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
else,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
reuse,Identifier
.,Punctuation
configure,Identifier
(,Punctuation
bytes,Identifier
",",Punctuation
 ,Whitespace
offset,Identifier
",",Punctuation
 ,Whitespace
length,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Creates or reinitializes a {@link BinaryDecoder} with the byte array
   * provided as the source of data. If <i>reuse</i> is provided, it will
   * attempt to reinitialize <i>reuse</i> to the new byte array. This instance
   * will use the provided byte array as its buffer.
   * <p/>
   * {@link BinaryDecoder#inputStream()} provides a view on the data that is
   * buffer-aware and can provide a view of the data not yet read by Decoder API
   * methods.
   * 
   * @param bytes The byte array to initialize to
   * @param offset The offset to start reading from
   * @param length The maximum number of bytes to read from the byte array
   * @param reuse The BinaryDecoder to attempt to reinitialize. if null a new
   *          BinaryDecoder is created.
   * @return A BinaryDecoder that uses <i>bytes</i> as its source of data. If
   *         <i>reuse</i> is null, this will be a new instance. <i>reuse</i> may
   *         be reinitialized if appropriate, otherwise a new instance is
   *         returned. Clients must not assume that <i>reuse</i> is
   *         reinitialized and returned.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
binaryDecoder,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
bytes,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
offset,Identifier
",",Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
length,Identifier
",",Punctuation
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
reuse,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
null,Keyword
 ,Whitespace
==,Operator
 ,Whitespace
reuse,Identifier
 ,Whitespace
||,Operator
 ,Whitespace
!,Operator
reuse,Identifier
.,Punctuation
getClass,Identifier
(,Punctuation
),Punctuation
.,Punctuation
equals,Identifier
(,Punctuation
BinaryDecoder,Identifier
.,Punctuation
class,Keyword
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
BinaryDecoder,Identifier
(,Punctuation
bytes,Identifier
",",Punctuation
 ,Whitespace
offset,Identifier
",",Punctuation
 ,Whitespace
length,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
else,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
reuse,Identifier
.,Punctuation
configure,Identifier
(,Punctuation
bytes,Identifier
",",Punctuation
 ,Whitespace
offset,Identifier
",",Punctuation
 ,Whitespace
length,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** @deprecated use {@link #binaryDecoder(byte[], BinaryDecoder)} instead */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
Deprecated,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
createBinaryDecoder,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
bytes,Identifier
",",Punctuation
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
reuse,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
binaryDecoder,Identifier
(,Punctuation
bytes,Identifier
",",Punctuation
 ,Whitespace
0,Literal
",",Punctuation
 ,Whitespace
bytes,Identifier
.,Punctuation
length,Identifier
",",Punctuation
 ,Whitespace
reuse,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * This method is shorthand for
   * <pre>
   * createBinaryDecoder(bytes, 0, bytes.length, reuse);
   * </pre> {@link #binaryDecoder(byte[], int, int, BinaryDecoder)}
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
binaryDecoder,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
bytes,Identifier
",",Punctuation
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
reuse,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
binaryDecoder,Identifier
(,Punctuation
bytes,Identifier
",",Punctuation
 ,Whitespace
0,Literal
",",Punctuation
 ,Whitespace
bytes,Identifier
.,Punctuation
length,Identifier
",",Punctuation
 ,Whitespace
reuse,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates a {@link JsonDecoder} using the InputStrim provided for reading
   * data that conforms to the Schema provided.
   * <p/>
   * 
   * @param schema
   *          The Schema for data read from this JsonEncoder. Cannot be null.
   * @param input
   *          The InputStream to read from. Cannot be null.
   * @return A JsonEncoder configured with <i>input</i> and <i>schema</i>
   * @throws IOException
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
JsonDecoder,Identifier
 ,Whitespace
jsonDecoder,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
",",Punctuation
 ,Whitespace
InputStream,Identifier
 ,Whitespace
input,Identifier
),Punctuation
"
",Newline
      ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
JsonDecoder,Identifier
(,Punctuation
schema,Identifier
",",Punctuation
 ,Whitespace
input,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Creates a {@link JsonDecoder} using the String provided for reading data
   * that conforms to the Schema provided.
   * <p/>
   * 
   * @param schema
   *          The Schema for data read from this JsonEncoder. Cannot be null.
   * @param input
   *          The String to read from. Cannot be null.
   * @return A JsonEncoder configured with <i>input</i> and <i>schema</i>
   * @throws IOException
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
JsonDecoder,Identifier
 ,Whitespace
jsonDecoder,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
",",Punctuation
 ,Whitespace
String,Identifier
 ,Whitespace
input,Identifier
),Punctuation
"
",Newline
      ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
JsonDecoder,Identifier
(,Punctuation
schema,Identifier
",",Punctuation
 ,Whitespace
input,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates a {@link ValidatingDecoder} wrapping the Decoder provided. This
   * ValidatingDecoder will ensure that operations against it conform to the
   * schema provided.
   * 
   * @param schema
   *          The Schema to validate against. Cannot be null.
   * @param wrapped
   *          The Decoder to wrap.
   * @return A ValidatingDecoder configured with <i>wrapped</i> and
   *         <i>schema</i>
   * @throws IOException
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
ValidatingDecoder,Identifier
 ,Whitespace
validatingDecoder,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
",",Punctuation
 ,Whitespace
Decoder,Identifier
 ,Whitespace
wrapped,Identifier
),Punctuation
"
",Newline
      ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
ValidatingDecoder,Identifier
(,Punctuation
schema,Identifier
",",Punctuation
 ,Whitespace
wrapped,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates a {@link ResolvingDecoder} wrapping the Decoder provided. This
   * ResolvingDecoder will resolve input conforming to the <i>writer</i> schema
   * from the wrapped Decoder, and present it as the <i>reader</i> schema.
   * 
   * @param writer
   *          The Schema that the source data is in. Cannot be null.
   * @param reader
   *          The Schema that the reader wishes to read the data as. Cannot be
   *          null.
   * @param wrapped
   *          The Decoder to wrap.
   * @return A ResolvingDecoder configured to resolve <i>writer</i> to
   *         <i>reader</i> from <i>in</i>
   * @throws IOException
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
ResolvingDecoder,Identifier
 ,Whitespace
resolvingDecoder,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
writer,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
 ,Whitespace
reader,Identifier
",",Punctuation
"
",Newline
      ,Whitespace
Decoder,Identifier
 ,Whitespace
wrapped,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
ResolvingDecoder,Identifier
(,Punctuation
writer,Identifier
",",Punctuation
 ,Whitespace
reader,Identifier
",",Punctuation
 ,Whitespace
wrapped,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
DefaultDecoderFactory,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
DecoderFactory,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
DecoderFactory,Identifier
 ,Whitespace
configureDecoderBufferSize,Identifier
(,Punctuation
int,Keyword
 ,Whitespace
bufferSize,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
IllegalArgumentException,Identifier
(,Punctuation
"""This Factory instance is Immutable""",String
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
},Punctuation
"
",Newline
