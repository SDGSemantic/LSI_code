Text,Token
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",Comment
"
",Newline
package,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
data,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
IOException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
Arrays,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
AvroRuntimeException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
Schema,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
Schema,Identifier
.,Punctuation
Field,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
Schema,Identifier
.,Punctuation
Type,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
generic,Identifier
.,Punctuation
GenericData,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
generic,Identifier
.,Punctuation
IndexedRecord,Identifier
;,Punctuation
"
",Newline
"
",Newline
/** Abstract base class for RecordBuilder implementations.  Not thread-safe. */,Comment
"
",Newline
public,Keyword
 ,Whitespace
abstract,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
RecordBuilderBase,Identifier
<,Operator
T,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
IndexedRecord,Identifier
>,Operator
 ,Whitespace
"
",Newline
  ,Whitespace
implements,Keyword
 ,Whitespace
RecordBuilder,Identifier
<,Operator
T,Identifier
>,Operator
 ,Whitespace
{,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Field,Identifier
[,Punctuation
],Punctuation
 ,Whitespace
EMPTY_FIELDS,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
Field,Identifier
[,Punctuation
0,Literal
],Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Field,Identifier
[,Punctuation
],Punctuation
 ,Whitespace
fields,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
boolean,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
fieldSetFlags,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
GenericData,Identifier
 ,Whitespace
data,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
 ,Whitespace
return,Keyword
 ,Whitespace
schema,Identifier
;,Punctuation
 ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Field,Identifier
[,Punctuation
],Punctuation
 ,Whitespace
fields,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
 ,Whitespace
return,Keyword
 ,Whitespace
fields,Identifier
;,Punctuation
 ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
boolean,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
fieldSetFlags,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
 ,Whitespace
return,Keyword
 ,Whitespace
fieldSetFlags,Identifier
;,Punctuation
 ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
GenericData,Identifier
 ,Whitespace
data,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
 ,Whitespace
return,Keyword
 ,Whitespace
data,Identifier
;,Punctuation
 ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates a RecordBuilderBase for building records of the given type.
   * @param schema the schema associated with the record class.
   */",Comment
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
RecordBuilderBase,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
schema,Identifier
",",Punctuation
 ,Whitespace
GenericData,Identifier
 ,Whitespace
data,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
.,Punctuation
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schema,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
.,Punctuation
data,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
data,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
fields,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
Field,Identifier
[,Punctuation
],Punctuation
),Punctuation
 ,Whitespace
schema,Identifier
.,Punctuation
getFields,Identifier
(,Punctuation
),Punctuation
.,Punctuation
toArray,Identifier
(,Punctuation
EMPTY_FIELDS,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
fieldSetFlags,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
boolean,Keyword
[,Punctuation
fields,Identifier
.,Punctuation
length,Identifier
],Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * RecordBuilderBase copy constructor.
   * Makes a deep copy of the values in the other builder.
   * @param other RecordBuilderBase instance to copy.
   */",Comment
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
RecordBuilderBase,Identifier
(,Punctuation
RecordBuilderBase,Identifier
<,Operator
T,Identifier
>,Operator
 ,Whitespace
other,Identifier
",",Punctuation
 ,Whitespace
GenericData,Identifier
 ,Whitespace
data,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
.,Punctuation
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
other,Identifier
.,Punctuation
schema,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
.,Punctuation
data,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
data,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
fields,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
Field,Identifier
[,Punctuation
],Punctuation
),Punctuation
 ,Whitespace
schema,Identifier
.,Punctuation
getFields,Identifier
(,Punctuation
),Punctuation
.,Punctuation
toArray,Identifier
(,Punctuation
EMPTY_FIELDS,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
fieldSetFlags,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
boolean,Keyword
[,Punctuation
other,Identifier
.,Punctuation
fieldSetFlags,Identifier
.,Punctuation
length,Identifier
],Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
System,Identifier
.,Punctuation
arraycopy,Identifier
(,Punctuation
"
",Newline
        ,Whitespace
other,Identifier
.,Punctuation
fieldSetFlags,Identifier
",",Punctuation
 ,Whitespace
0,Literal
",",Punctuation
 ,Whitespace
fieldSetFlags,Identifier
",",Punctuation
 ,Whitespace
0,Literal
",",Punctuation
 ,Whitespace
fieldSetFlags,Identifier
.,Punctuation
length,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Validates that a particular value for a given field is valid according to 
   * the following algorithm:
   * 1. If the value is not null, or the field type is null, or the field type 
   * is a union which accepts nulls, returns.
   * 2. Else, if the field has a default value, returns.
   * 3. Otherwise throws AvroRuntimeException. 
   * @param field the field to validate.
   * @param value the value to validate.
   * @throws NullPointerException if value is null and the given field does 
   * not accept null values.
   */",Comment
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
validate,Identifier
(,Punctuation
Field,Identifier
 ,Whitespace
field,Identifier
",",Punctuation
 ,Whitespace
Object,Identifier
 ,Whitespace
value,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
isValidValue,Identifier
(,Punctuation
field,Identifier
",",Punctuation
 ,Whitespace
value,Identifier
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
else,Keyword
 ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
field,Identifier
.,Punctuation
defaultValue,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
else,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
AvroRuntimeException,Identifier
(,Punctuation
"
",Newline
          ,Whitespace
"""Field """,String
 ,Whitespace
+,Operator
 ,Whitespace
field,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
""" does not accept null values""",String
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Tests whether a value is valid for a specified field. 
   * @param f the field for which to test the value.
   * @param value the value to test.
   * @return true if the value is valid for the given field; false otherwise.
   */",Comment
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
boolean,Keyword
 ,Whitespace
isValidValue,Identifier
(,Punctuation
Field,Identifier
 ,Whitespace
f,Identifier
",",Punctuation
 ,Whitespace
Object,Identifier
 ,Whitespace
value,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
value,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
true,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
f,Identifier
.,Punctuation
schema,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
Type,Identifier
 ,Whitespace
type,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schema,Identifier
.,Punctuation
getType,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"// If the type is null, any value is valid",Comment
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
type,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
Type,Identifier
.,Punctuation
NULL,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
true,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
"// If the type is a union that allows nulls, any value is valid",Comment
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
type,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
Type,Identifier
.,Punctuation
UNION,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
Schema,Identifier
 ,Whitespace
s,Identifier
 ,Whitespace
:,Operator
 ,Whitespace
schema,Identifier
.,Punctuation
getTypes,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
s,Identifier
.,Punctuation
getType,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
==,Operator
 ,Whitespace
Type,Identifier
.,Punctuation
NULL,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
return,Keyword
 ,Whitespace
true,Keyword
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
// The value is null but the type does not allow nulls,Comment
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
false,Keyword
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Gets the default value of the given field, if any.
   * @param field the field whose default value should be retrieved.
   * @return the default value associated with the given field, 
   * or null if none is specified in the schema.
   * @throws IOException 
   */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
SuppressWarnings,Identifier
(,Punctuation
{,Punctuation
 ,Whitespace
"""rawtypes""",String
",",Punctuation
 ,Whitespace
"""unchecked""",String
 ,Whitespace
},Punctuation
),Punctuation
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
Object,Identifier
 ,Whitespace
defaultValue,Identifier
(,Punctuation
Field,Identifier
 ,Whitespace
field,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
    ,Whitespace
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
data,Identifier
.,Punctuation
deepCopy,Identifier
(,Punctuation
field,Identifier
.,Punctuation
schema,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
data,Identifier
.,Punctuation
getDefaultValue,Identifier
(,Punctuation
field,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
hashCode,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
final,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
prime,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
31,Literal
;,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
result,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
1,Literal
;,Punctuation
"
",Newline
    ,Whitespace
result,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
prime,Identifier
 ,Whitespace
*,Operator
 ,Whitespace
result,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
Arrays,Identifier
.,Punctuation
hashCode,Identifier
(,Punctuation
fieldSetFlags,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
result,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
prime,Identifier
 ,Whitespace
*,Operator
 ,Whitespace
result,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
(,Punctuation
(,Punctuation
schema,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
?,Operator
 ,Whitespace
0,Literal
 ,Whitespace
:,Operator
 ,Whitespace
schema,Identifier
.,Punctuation
hashCode,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
result,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
boolean,Keyword
 ,Whitespace
equals,Identifier
(,Punctuation
Object,Identifier
 ,Whitespace
obj,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
this,Keyword
 ,Whitespace
==,Operator
 ,Whitespace
obj,Identifier
),Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
true,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
obj,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
null,Keyword
),Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
false,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
getClass,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
!=,Operator
 ,Whitespace
obj,Identifier
.,Punctuation
getClass,Identifier
(,Punctuation
),Punctuation
),Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
false,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
@,Punctuation
SuppressWarnings,Identifier
(,Punctuation
"""rawtypes""",String
),Punctuation
"
",Newline
    ,Whitespace
RecordBuilderBase,Identifier
 ,Whitespace
other,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
RecordBuilderBase,Identifier
),Punctuation
 ,Whitespace
obj,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
!,Operator
Arrays,Identifier
.,Punctuation
equals,Identifier
(,Punctuation
fieldSetFlags,Identifier
",",Punctuation
 ,Whitespace
other,Identifier
.,Punctuation
fieldSetFlags,Identifier
),Punctuation
),Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
false,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
schema,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
other,Identifier
.,Punctuation
schema,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
"
",Newline
        ,Whitespace
return,Keyword
 ,Whitespace
false,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
else,Keyword
 ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
!,Operator
schema,Identifier
.,Punctuation
equals,Identifier
(,Punctuation
other,Identifier
.,Punctuation
schema,Identifier
),Punctuation
),Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
false,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
true,Keyword
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
},Punctuation
"
",Newline
