Text,Token
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",Comment
"
",Newline
package,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
ipc,Identifier
.,Punctuation
stats,Identifier
;,Punctuation
"
",Newline
"
",Newline
/** Encapsulates the passing of time. */,Comment
"
",Newline
class,Keyword
 ,Whitespace
Stopwatch,Identifier
  ,Whitespace
{,Punctuation
"
",Newline
  ,Whitespace
/** Encapsulates ticking time sources. */,Comment
"
",Newline
  ,Whitespace
interface,Keyword
 ,Whitespace
Ticks,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
"/**
     * Returns a number of ""ticks"" in nanoseconds.
     * This should be monotonically non-decreasing.
     */",Comment
"
",Newline
    ,Whitespace
long,Keyword
 ,Whitespace
ticks,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Default System time source. */,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
Ticks,Identifier
 ,Whitespace
SYSTEM_TICKS,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
SystemTicks,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
Ticks,Identifier
 ,Whitespace
ticks,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
long,Keyword
 ,Whitespace
start,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
long,Keyword
 ,Whitespace
elapsed,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
-,Operator
1,Literal
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
boolean,Keyword
 ,Whitespace
running,Identifier
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
Stopwatch,Identifier
(,Punctuation
Ticks,Identifier
 ,Whitespace
ticks,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
.,Punctuation
ticks,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
ticks,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Returns seconds that have elapsed since start() */,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
long,Keyword
 ,Whitespace
elapsedNanos,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
running,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
this,Keyword
.,Punctuation
ticks,Identifier
.,Punctuation
ticks,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
-,Operator
 ,Whitespace
start,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
else,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
elapsed,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
-,Operator
1,Literal
),Punctuation
 ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
IllegalStateException,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
elapsed,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Starts the stopwatch. */,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
start,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
running,Identifier
),Punctuation
 ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
IllegalStateException,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
start,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
ticks,Identifier
.,Punctuation
ticks,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
running,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
true,Keyword
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Stops the stopwatch and calculates the elapsed time. */,Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
stop,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
!,Operator
running,Identifier
),Punctuation
 ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
IllegalStateException,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
elapsed,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
ticks,Identifier
.,Punctuation
ticks,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
-,Operator
 ,Whitespace
start,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
running,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
false,Keyword
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** Implementation of Ticks using System.nanoTime(). */,Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
SystemTicks,Identifier
 ,Whitespace
implements,Keyword
 ,Whitespace
Ticks,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
long,Keyword
 ,Whitespace
ticks,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
System,Identifier
.,Punctuation
nanoTime,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
},Punctuation
"
",Newline
