Text,Token
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied.  See the License for the specific language governing
 * permissions and limitations under the License.
 */",Comment
"
",Newline
"
",Newline
package,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
mapreduce,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
IOException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
OutputStream,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
Schema,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
file,Identifier
.,Punctuation
CodecFactory,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
file,Identifier
.,Punctuation
DataFileConstants,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
file,Identifier
.,Punctuation
DataFileWriter,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
generic,Identifier
.,Punctuation
GenericData,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
generic,Identifier
.,Punctuation
GenericRecord,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
hadoop,Identifier
.,Punctuation
io,Identifier
.,Punctuation
AvroDatumConverter,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
hadoop,Identifier
.,Punctuation
io,Identifier
.,Punctuation
AvroKeyValue,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
hadoop,Identifier
.,Punctuation
mapreduce,Identifier
.,Punctuation
RecordWriter,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
hadoop,Identifier
.,Punctuation
mapreduce,Identifier
.,Punctuation
TaskAttemptContext,Identifier
;,Punctuation
"
",Newline
"
",Newline
"/**
 * Writes key/value pairs to an Avro container file.
 *
 * <p>Each entry in the Avro container file will be a generic record with two fields,
 * named 'key' and 'value'.  The input types may be basic Writable objects like Text or
 * IntWritable, or they may be AvroWrapper subclasses (AvroKey or AvroValue).  Writable
 * objects will be converted to their corresponding Avro types when written to the generic
 * record key/value pair.</p>
 *
 * @param <K> The type of key to write.
 * @param <V> The type of value to write.
 */",Comment
"
",Newline
public,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
AvroKeyValueRecordWriter,Identifier
<,Operator
K,Identifier
",",Punctuation
 ,Whitespace
V,Identifier
>,Operator
 ,Whitespace
extends,Keyword
 ,Whitespace
RecordWriter,Identifier
<,Operator
K,Identifier
",",Punctuation
 ,Whitespace
V,Identifier
>,Operator
 ,Whitespace
implements,Keyword
 ,Whitespace
Syncable,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
  ,Whitespace
/** A writer for the Avro container file. */,Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
DataFileWriter,Identifier
<,Operator
GenericRecord,Identifier
>,Operator
 ,Whitespace
mAvroFileWriter,Identifier
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** The writer schema for the generic record entries of the Avro container file. */,Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
mKeyValuePairSchema,Identifier
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** A reusable Avro generic record for writing key/value pairs to the file. */,Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
AvroKeyValue,Identifier
<,Operator
Object,Identifier
",",Punctuation
 ,Whitespace
Object,Identifier
>,Operator
 ,Whitespace
mOutputRecord,Identifier
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** A helper object that converts the input key to an Avro datum. */,Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
AvroDatumConverter,Identifier
<,Operator
K,Identifier
",",Punctuation
 ,Whitespace
?,Operator
>,Operator
 ,Whitespace
mKeyConverter,Identifier
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** A helper object that converts the input value to an Avro datum. */,Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
AvroDatumConverter,Identifier
<,Operator
V,Identifier
",",Punctuation
 ,Whitespace
?,Operator
>,Operator
 ,Whitespace
mValueConverter,Identifier
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Constructor.
   *
   * @param keyConverter A key to Avro datum converter.
   * @param valueConverter A value to Avro datum converter.
   * @param dataModel The data model for key and value.
   * @param compressionCodec A compression codec factory for the Avro container file.
   * @param outputStream The output stream to write the Avro container file to.
   * @param syncInterval The sync interval for the Avro container file.
   * @throws IOException If the record writer cannot be opened.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
AvroKeyValueRecordWriter,Identifier
(,Punctuation
AvroDatumConverter,Identifier
<,Operator
K,Identifier
",",Punctuation
 ,Whitespace
?,Operator
>,Operator
 ,Whitespace
keyConverter,Identifier
",",Punctuation
"
",Newline
      ,Whitespace
AvroDatumConverter,Identifier
<,Operator
V,Identifier
",",Punctuation
 ,Whitespace
?,Operator
>,Operator
 ,Whitespace
valueConverter,Identifier
",",Punctuation
 ,Whitespace
GenericData,Identifier
 ,Whitespace
dataModel,Identifier
",",Punctuation
"
",Newline
      ,Whitespace
CodecFactory,Identifier
 ,Whitespace
compressionCodec,Identifier
",",Punctuation
 ,Whitespace
OutputStream,Identifier
 ,Whitespace
outputStream,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
syncInterval,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
// Create the generic record schema for the key/value pair.,Comment
"
",Newline
    ,Whitespace
mKeyValuePairSchema,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
AvroKeyValue,Identifier
.,Punctuation
getSchema,Identifier
(,Punctuation
"
",Newline
        ,Whitespace
keyConverter,Identifier
.,Punctuation
getWriterSchema,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
valueConverter,Identifier
.,Punctuation
getWriterSchema,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
// Create an Avro container file and a writer to it.,Comment
"
",Newline
    ,Whitespace
mAvroFileWriter,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
DataFileWriter,Identifier
<,Operator
GenericRecord,Identifier
>,Operator
(,Punctuation
"
",Newline
        ,Whitespace
dataModel,Identifier
.,Punctuation
createDatumWriter,Identifier
(,Punctuation
mKeyValuePairSchema,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
mAvroFileWriter,Identifier
.,Punctuation
setCodec,Identifier
(,Punctuation
compressionCodec,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
mAvroFileWriter,Identifier
.,Punctuation
setSyncInterval,Identifier
(,Punctuation
syncInterval,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
mAvroFileWriter,Identifier
.,Punctuation
create,Identifier
(,Punctuation
mKeyValuePairSchema,Identifier
",",Punctuation
 ,Whitespace
outputStream,Identifier
),Punctuation
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
// Keep a reference to the converters.,Comment
"
",Newline
    ,Whitespace
mKeyConverter,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
keyConverter,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
mValueConverter,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
valueConverter,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
// Create a reusable output record.,Comment
"
",Newline
    ,Whitespace
mOutputRecord,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
AvroKeyValue,Identifier
<,Operator
Object,Identifier
",",Punctuation
 ,Whitespace
Object,Identifier
>,Operator
(,Punctuation
new,Keyword
 ,Whitespace
GenericData,Identifier
.,Punctuation
Record,Identifier
(,Punctuation
mKeyValuePairSchema,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Constructor.
   *
   * @param keyConverter A key to Avro datum converter.
   * @param valueConverter A value to Avro datum converter.
   * @param dataModel The data model for key and value.
   * @param compressionCodec A compression codec factory for the Avro container file.
   * @param outputStream The output stream to write the Avro container file to.
   * @throws IOException If the record writer cannot be opened.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
AvroKeyValueRecordWriter,Identifier
(,Punctuation
AvroDatumConverter,Identifier
<,Operator
K,Identifier
",",Punctuation
 ,Whitespace
?,Operator
>,Operator
 ,Whitespace
keyConverter,Identifier
",",Punctuation
"
",Newline
      ,Whitespace
AvroDatumConverter,Identifier
<,Operator
V,Identifier
",",Punctuation
 ,Whitespace
?,Operator
>,Operator
 ,Whitespace
valueConverter,Identifier
",",Punctuation
 ,Whitespace
GenericData,Identifier
 ,Whitespace
dataModel,Identifier
",",Punctuation
"
",Newline
      ,Whitespace
CodecFactory,Identifier
 ,Whitespace
compressionCodec,Identifier
",",Punctuation
 ,Whitespace
OutputStream,Identifier
 ,Whitespace
outputStream,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
(,Punctuation
keyConverter,Identifier
",",Punctuation
 ,Whitespace
valueConverter,Identifier
",",Punctuation
 ,Whitespace
dataModel,Identifier
",",Punctuation
 ,Whitespace
compressionCodec,Identifier
",",Punctuation
 ,Whitespace
outputStream,Identifier
",",Punctuation
 ,Whitespace
"
",Newline
        ,Whitespace
DataFileConstants,Identifier
.,Punctuation
DEFAULT_SYNC_INTERVAL,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Gets the writer schema for the key/value pair generic record.
   *
   * @return The writer schema used for entries of the Avro container file.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
Schema,Identifier
 ,Whitespace
getWriterSchema,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
mKeyValuePairSchema,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** {@inheritDoc} */,Comment
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
write,Identifier
(,Punctuation
K,Identifier
 ,Whitespace
key,Identifier
",",Punctuation
 ,Whitespace
V,Identifier
 ,Whitespace
value,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
mOutputRecord,Identifier
.,Punctuation
setKey,Identifier
(,Punctuation
mKeyConverter,Identifier
.,Punctuation
convert,Identifier
(,Punctuation
key,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
mOutputRecord,Identifier
.,Punctuation
setValue,Identifier
(,Punctuation
mValueConverter,Identifier
.,Punctuation
convert,Identifier
(,Punctuation
value,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
mAvroFileWriter,Identifier
.,Punctuation
append,Identifier
(,Punctuation
mOutputRecord,Identifier
.,Punctuation
get,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** {@inheritDoc} */,Comment
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
close,Identifier
(,Punctuation
TaskAttemptContext,Identifier
 ,Whitespace
context,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
mAvroFileWriter,Identifier
.,Punctuation
close,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
/** {@inheritDoc} */,Comment
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
long,Keyword
 ,Whitespace
sync,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
mAvroFileWriter,Identifier
.,Punctuation
sync,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
  ,Whitespace
"
",Newline
},Punctuation
"
",Newline
