Text,Token
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied.  See the License for the specific language governing
 * permissions and limitations under the License.
 */",Comment
"
",Newline
"
",Newline
package,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
Iterator,Identifier
;,Punctuation
"
",Newline
"
",Newline
"/**
 * <p>
 * A {@link SchemaValidator} for validating the provided schema against all
 * schemas in the Iterable in {@link #validate(Schema, Iterable)}.
 * </p>
 * <p>
 * Uses the {@link SchemaValidationStrategy} provided in the constructor to
 * validate the {@link Schema} against each Schema in the Iterable, in Iterator
 * order, via {@link SchemaValidationStrategy#validate(Schema, Schema)}.
 * </p>
 */",Comment
"
",Newline
public,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
ValidateAll,Identifier
 ,Whitespace
implements,Keyword
 ,Whitespace
SchemaValidator,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
SchemaValidationStrategy,Identifier
 ,Whitespace
strategy,Identifier
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * @param strategy
   *          The strategy to use for validation of pairwise schemas.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
ValidateAll,Identifier
(,Punctuation
SchemaValidationStrategy,Identifier
 ,Whitespace
strategy,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
.,Punctuation
strategy,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
strategy,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
validate,Identifier
(,Punctuation
Schema,Identifier
 ,Whitespace
toValidate,Identifier
",",Punctuation
 ,Whitespace
Iterable,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
schemasInOrder,Identifier
),Punctuation
"
",Newline
      ,Whitespace
throws,Keyword
 ,Whitespace
SchemaValidationException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
Iterator,Identifier
<,Operator
Schema,Identifier
>,Operator
 ,Whitespace
schemas,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schemasInOrder,Identifier
.,Punctuation
iterator,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
while,Keyword
 ,Whitespace
(,Punctuation
schemas,Identifier
.,Punctuation
hasNext,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
existing,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schemas,Identifier
.,Punctuation
next,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
strategy,Identifier
.,Punctuation
validate,Identifier
(,Punctuation
toValidate,Identifier
",",Punctuation
 ,Whitespace
existing,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
},Punctuation
"
",Newline
