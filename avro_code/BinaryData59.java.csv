Text,Token
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",Comment
"
",Newline
package,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
io,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
IOException,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
Schema,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
Schema,Identifier
.,Punctuation
Field,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
AvroRuntimeException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
generic,Identifier
.,Punctuation
GenericDatumReader,Identifier
;,Punctuation
"
",Newline
"
",Newline
/** Utilities for binary-encoded data. */,Comment
"
",Newline
public,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
BinaryData,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
BinaryData,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
},Punctuation
                      ,Whitespace
// no public ctor,Comment
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
Decoders,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
d1,Identifier
",",Punctuation
 ,Whitespace
d2,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
Decoders,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
       ,Whitespace
this,Keyword
.,Punctuation
d1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
BinaryDecoder,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
byte,Keyword
[,Punctuation
0,Literal
],Punctuation
",",Punctuation
 ,Whitespace
0,Literal
",",Punctuation
 ,Whitespace
0,Literal
),Punctuation
;,Punctuation
"
",Newline
       ,Whitespace
this,Keyword
.,Punctuation
d2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
BinaryDecoder,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
byte,Keyword
[,Punctuation
0,Literal
],Punctuation
",",Punctuation
 ,Whitespace
0,Literal
",",Punctuation
 ,Whitespace
0,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
set,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
data1,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
off1,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
len1,Identifier
",",Punctuation
 ,Whitespace
"
",Newline
                    ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
data2,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
off2,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
len2,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
d1,Identifier
.,Punctuation
setBuf,Identifier
(,Punctuation
data1,Identifier
",",Punctuation
 ,Whitespace
off1,Identifier
",",Punctuation
 ,Whitespace
len1,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
d2,Identifier
.,Punctuation
setBuf,Identifier
(,Punctuation
data2,Identifier
",",Punctuation
 ,Whitespace
off2,Identifier
",",Punctuation
 ,Whitespace
len2,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
clear,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
d1,Identifier
.,Punctuation
clearBuf,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
d2,Identifier
.,Punctuation
clearBuf,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
                     ,Whitespace
// no public ctor,Comment
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
ThreadLocal,Identifier
<,Operator
Decoders,Identifier
>,Operator
 ,Whitespace
DECODERS,Identifier
"
",Newline
    ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
ThreadLocal,Identifier
<,Operator
Decoders,Identifier
>,Operator
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
 ,Whitespace
protected,Keyword
 ,Whitespace
Decoders,Identifier
 ,Whitespace
initialValue,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
 ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
Decoders,Identifier
(,Punctuation
),Punctuation
;,Punctuation
 ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Compare binary encoded data.  If equal, return zero.  If greater-than,
   * return 1, if less than return -1. Order is consistent with that of {@link
   * org.apache.avro.generic.GenericData#compare(Object, Object, Schema)}.*/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
compare,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
b1,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
s1,Identifier
",",Punctuation
"
",Newline
                            ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
b2,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
s2,Identifier
",",Punctuation
"
",Newline
                            ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
compare,Identifier
(,Punctuation
b1,Identifier
",",Punctuation
 ,Whitespace
s1,Identifier
",",Punctuation
 ,Whitespace
b1,Identifier
.,Punctuation
length,Identifier
 ,Whitespace
-,Operator
 ,Whitespace
s1,Identifier
",",Punctuation
 ,Whitespace
b2,Identifier
",",Punctuation
 ,Whitespace
s2,Identifier
",",Punctuation
 ,Whitespace
b2,Identifier
.,Punctuation
length,Identifier
 ,Whitespace
-,Operator
 ,Whitespace
s2,Identifier
",",Punctuation
 ,Whitespace
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Compare binary encoded data.  If equal, return zero.  If greater-than,
   * return 1, if less than return -1. Order is consistent with that of {@link
   * org.apache.avro.generic.GenericData#compare(Object, Object, Schema)}.*/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
compare,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
b1,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
s1,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
l1,Identifier
",",Punctuation
"
",Newline
                            ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
b2,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
s2,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
l2,Identifier
",",Punctuation
"
",Newline
                            ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
Decoders,Identifier
 ,Whitespace
decoders,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
DECODERS,Identifier
.,Punctuation
get,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
decoders,Identifier
.,Punctuation
set,Identifier
(,Punctuation
b1,Identifier
",",Punctuation
 ,Whitespace
s1,Identifier
",",Punctuation
 ,Whitespace
l1,Identifier
",",Punctuation
 ,Whitespace
b2,Identifier
",",Punctuation
 ,Whitespace
s2,Identifier
",",Punctuation
 ,Whitespace
l2,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
compare,Identifier
(,Punctuation
decoders,Identifier
",",Punctuation
 ,Whitespace
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
catch,Keyword
 ,Whitespace
(,Punctuation
IOException,Identifier
 ,Whitespace
e,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
AvroRuntimeException,Identifier
(,Punctuation
e,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
decoders,Identifier
.,Punctuation
clear,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** If equal, return the number of bytes consumed.  If greater than, return
   * GT, if less than, return LT. */",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
compare,Identifier
(,Punctuation
Decoders,Identifier
 ,Whitespace
d,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
Decoder,Identifier
 ,Whitespace
d1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d,Identifier
.,Punctuation
d1,Identifier
;,Punctuation
 ,Whitespace
Decoder,Identifier
 ,Whitespace
d2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d,Identifier
.,Punctuation
d2,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
switch,Keyword
 ,Whitespace
(,Punctuation
schema,Identifier
.,Punctuation
getType,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
RECORD,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
Field,Identifier
 ,Whitespace
field,Identifier
 ,Whitespace
:,Operator
 ,Whitespace
schema,Identifier
.,Punctuation
getFields,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
field,Identifier
.,Punctuation
order,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
==,Operator
 ,Whitespace
Field,Identifier
.,Punctuation
Order,Identifier
.,Punctuation
IGNORE,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
GenericDatumReader,Identifier
.,Punctuation
skip,Identifier
(,Punctuation
field,Identifier
.,Punctuation
schema,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
d1,Identifier
),Punctuation
;,Punctuation
"
",Newline
          ,Whitespace
GenericDatumReader,Identifier
.,Punctuation
skip,Identifier
(,Punctuation
field,Identifier
.,Punctuation
schema,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
d2,Identifier
),Punctuation
;,Punctuation
"
",Newline
          ,Whitespace
continue,Keyword
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
        ,Whitespace
int,Keyword
 ,Whitespace
c,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
compare,Identifier
(,Punctuation
d,Identifier
",",Punctuation
 ,Whitespace
field,Identifier
.,Punctuation
schema,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
c,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
0,Literal
),Punctuation
"
",Newline
          ,Whitespace
return,Keyword
 ,Whitespace
(,Punctuation
field,Identifier
.,Punctuation
order,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
!=,Operator
 ,Whitespace
Field,Identifier
.,Punctuation
Order,Identifier
.,Punctuation
DESCENDING,Identifier
),Punctuation
 ,Whitespace
?,Operator
 ,Whitespace
c,Identifier
 ,Whitespace
:,Operator
 ,Whitespace
-,Operator
c,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
0,Literal
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
ENUM,Identifier
:,Operator
 ,Whitespace
case,Keyword
 ,Whitespace
INT,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
i1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d1,Identifier
.,Punctuation
readInt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
i2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d2,Identifier
.,Punctuation
readInt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
i1,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
i2,Identifier
 ,Whitespace
?,Operator
 ,Whitespace
0,Literal
 ,Whitespace
:,Operator
 ,Whitespace
(,Punctuation
i1,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
i2,Identifier
 ,Whitespace
?,Operator
 ,Whitespace
1,Literal
 ,Whitespace
:,Operator
 ,Whitespace
-,Operator
1,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
LONG,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
long,Keyword
 ,Whitespace
l1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d1,Identifier
.,Punctuation
readLong,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
long,Keyword
 ,Whitespace
l2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d2,Identifier
.,Punctuation
readLong,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
l1,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
l2,Identifier
 ,Whitespace
?,Operator
 ,Whitespace
0,Literal
 ,Whitespace
:,Operator
 ,Whitespace
(,Punctuation
l1,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
l2,Identifier
 ,Whitespace
?,Operator
 ,Whitespace
1,Literal
 ,Whitespace
:,Operator
 ,Whitespace
-,Operator
1,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
ARRAY,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
long,Keyword
 ,Whitespace
i,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
0,Literal
;,Punctuation
                                 ,Whitespace
// position in array,Comment
"
",Newline
      ,Whitespace
long,Keyword
 ,Whitespace
r1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
0,Literal
",",Punctuation
 ,Whitespace
r2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
0,Literal
;,Punctuation
                        ,Whitespace
// remaining in current block,Comment
"
",Newline
      ,Whitespace
long,Keyword
 ,Whitespace
l1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
0,Literal
",",Punctuation
 ,Whitespace
l2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
0,Literal
;,Punctuation
                        ,Whitespace
// total array length,Comment
"
",Newline
      ,Whitespace
while,Keyword
 ,Whitespace
(,Punctuation
true,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
r1,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
0,Literal
),Punctuation
 ,Whitespace
{,Punctuation
                            ,Whitespace
// refill blocks(s),Comment
"
",Newline
          ,Whitespace
r1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d1,Identifier
.,Punctuation
readLong,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
          ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
r1,Identifier
 ,Whitespace
<,Operator
 ,Whitespace
0,Literal
),Punctuation
 ,Whitespace
{,Punctuation
 ,Whitespace
r1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
-,Operator
r1,Identifier
;,Punctuation
 ,Whitespace
d1,Identifier
.,Punctuation
readLong,Identifier
(,Punctuation
),Punctuation
;,Punctuation
 ,Whitespace
},Punctuation
"
",Newline
          ,Whitespace
l1,Identifier
 ,Whitespace
+=,Operator
 ,Whitespace
r1,Identifier
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
r2,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
0,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
r2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d2,Identifier
.,Punctuation
readLong,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
          ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
r2,Identifier
 ,Whitespace
<,Operator
 ,Whitespace
0,Literal
),Punctuation
 ,Whitespace
{,Punctuation
 ,Whitespace
r2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
-,Operator
r2,Identifier
;,Punctuation
 ,Whitespace
d2,Identifier
.,Punctuation
readLong,Identifier
(,Punctuation
),Punctuation
;,Punctuation
 ,Whitespace
},Punctuation
"
",Newline
          ,Whitespace
l2,Identifier
 ,Whitespace
+=,Operator
 ,Whitespace
r2,Identifier
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
r1,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
0,Literal
 ,Whitespace
||,Operator
 ,Whitespace
r2,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
0,Literal
),Punctuation
                   ,Whitespace
// empty block: done,Comment
"
",Newline
          ,Whitespace
return,Keyword
 ,Whitespace
(,Punctuation
l1,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
l2,Identifier
),Punctuation
 ,Whitespace
?,Operator
 ,Whitespace
0,Literal
 ,Whitespace
:,Operator
 ,Whitespace
(,Punctuation
(,Punctuation
l1,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
l2,Identifier
),Punctuation
 ,Whitespace
?,Operator
 ,Whitespace
1,Literal
 ,Whitespace
:,Operator
 ,Whitespace
-,Operator
1,Literal
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
long,Keyword
 ,Whitespace
l,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Math,Identifier
.,Punctuation
min,Identifier
(,Punctuation
l1,Identifier
",",Punctuation
 ,Whitespace
l2,Identifier
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
while,Keyword
 ,Whitespace
(,Punctuation
i,Identifier
 ,Whitespace
<,Operator
 ,Whitespace
l,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
                           ,Whitespace
// compare to end of block,Comment
"
",Newline
          ,Whitespace
int,Keyword
 ,Whitespace
c,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
compare,Identifier
(,Punctuation
d,Identifier
",",Punctuation
 ,Whitespace
schema,Identifier
.,Punctuation
getElementType,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
          ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
c,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
0,Literal
),Punctuation
 ,Whitespace
return,Keyword
 ,Whitespace
c,Identifier
;,Punctuation
"
",Newline
          ,Whitespace
i,Identifier
++,Operator
;,Punctuation
 ,Whitespace
r1,Identifier
--,Operator
;,Punctuation
 ,Whitespace
r2,Identifier
--,Operator
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
MAP,Identifier
:,Operator
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
AvroRuntimeException,Identifier
(,Punctuation
"""Can't compare maps!""",String
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
UNION,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
i1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d1,Identifier
.,Punctuation
readInt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
i2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d2,Identifier
.,Punctuation
readInt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
i1,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
i2,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
return,Keyword
 ,Whitespace
compare,Identifier
(,Punctuation
d,Identifier
",",Punctuation
 ,Whitespace
schema,Identifier
.,Punctuation
getTypes,Identifier
(,Punctuation
),Punctuation
.,Punctuation
get,Identifier
(,Punctuation
i1,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
 ,Whitespace
else,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
return,Keyword
 ,Whitespace
i1,Identifier
 ,Whitespace
-,Operator
 ,Whitespace
i2,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
FIXED,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
size,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schema,Identifier
.,Punctuation
getFixedSize,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
c,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
compareBytes,Identifier
(,Punctuation
d,Identifier
.,Punctuation
d1,Identifier
.,Punctuation
getBuf,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
d,Identifier
.,Punctuation
d1,Identifier
.,Punctuation
getPos,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
size,Identifier
",",Punctuation
"
",Newline
                           ,Whitespace
d,Identifier
.,Punctuation
d2,Identifier
.,Punctuation
getBuf,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
d,Identifier
.,Punctuation
d2,Identifier
.,Punctuation
getPos,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
size,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
d,Identifier
.,Punctuation
d1,Identifier
.,Punctuation
skipFixed,Identifier
(,Punctuation
size,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
d,Identifier
.,Punctuation
d2,Identifier
.,Punctuation
skipFixed,Identifier
(,Punctuation
size,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
c,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
STRING,Identifier
:,Operator
 ,Whitespace
case,Keyword
 ,Whitespace
BYTES,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
l1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d1,Identifier
.,Punctuation
readInt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
l2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d2,Identifier
.,Punctuation
readInt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
c,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
compareBytes,Identifier
(,Punctuation
d,Identifier
.,Punctuation
d1,Identifier
.,Punctuation
getBuf,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
d,Identifier
.,Punctuation
d1,Identifier
.,Punctuation
getPos,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
l1,Identifier
",",Punctuation
"
",Newline
                           ,Whitespace
d,Identifier
.,Punctuation
d2,Identifier
.,Punctuation
getBuf,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
d,Identifier
.,Punctuation
d2,Identifier
.,Punctuation
getPos,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
l2,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
d,Identifier
.,Punctuation
d1,Identifier
.,Punctuation
skipFixed,Identifier
(,Punctuation
l1,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
d,Identifier
.,Punctuation
d2,Identifier
.,Punctuation
skipFixed,Identifier
(,Punctuation
l2,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
c,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
FLOAT,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
float,Keyword
 ,Whitespace
f1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d1,Identifier
.,Punctuation
readFloat,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
float,Keyword
 ,Whitespace
f2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d2,Identifier
.,Punctuation
readFloat,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
(,Punctuation
f1,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
f2,Identifier
),Punctuation
 ,Whitespace
?,Operator
 ,Whitespace
0,Literal
 ,Whitespace
:,Operator
 ,Whitespace
(,Punctuation
(,Punctuation
f1,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
f2,Identifier
),Punctuation
 ,Whitespace
?,Operator
 ,Whitespace
1,Literal
 ,Whitespace
:,Operator
 ,Whitespace
-,Operator
1,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
DOUBLE,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
double,Keyword
 ,Whitespace
f1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d1,Identifier
.,Punctuation
readDouble,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
double,Keyword
 ,Whitespace
f2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d2,Identifier
.,Punctuation
readDouble,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
(,Punctuation
f1,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
f2,Identifier
),Punctuation
 ,Whitespace
?,Operator
 ,Whitespace
0,Literal
 ,Whitespace
:,Operator
 ,Whitespace
(,Punctuation
(,Punctuation
f1,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
f2,Identifier
),Punctuation
 ,Whitespace
?,Operator
 ,Whitespace
1,Literal
 ,Whitespace
:,Operator
 ,Whitespace
-,Operator
1,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
BOOLEAN,Identifier
:,Operator
"
",Newline
      ,Whitespace
boolean,Keyword
 ,Whitespace
b1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d1,Identifier
.,Punctuation
readBoolean,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
boolean,Keyword
 ,Whitespace
b2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
d2,Identifier
.,Punctuation
readBoolean,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
(,Punctuation
b1,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
b2,Identifier
),Punctuation
 ,Whitespace
?,Operator
 ,Whitespace
0,Literal
 ,Whitespace
:,Operator
 ,Whitespace
(,Punctuation
b1,Identifier
 ,Whitespace
?,Operator
 ,Whitespace
1,Literal
 ,Whitespace
:,Operator
 ,Whitespace
-,Operator
1,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
NULL,Identifier
:,Operator
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
0,Literal
;,Punctuation
"
",Newline
    ,Whitespace
default,Keyword
:,Operator
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
AvroRuntimeException,Identifier
(,Punctuation
"""Unexpected schema to compare!""",String
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Lexicographically compare bytes.  If equal, return zero.  If greater-than,
   * return a positive value, if less than return a negative value. */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
compareBytes,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
b1,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
s1,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
l1,Identifier
",",Punctuation
"
",Newline
                                 ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
b2,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
s2,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
l2,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
end1,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
s1,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
l1,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
end2,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
s2,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
l2,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
int,Keyword
 ,Whitespace
i,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
s1,Identifier
",",Punctuation
 ,Whitespace
j,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
s2,Identifier
;,Punctuation
 ,Whitespace
i,Identifier
 ,Whitespace
<,Operator
 ,Whitespace
end1,Identifier
 ,Whitespace
&&,Operator
 ,Whitespace
j,Identifier
 ,Whitespace
<,Operator
 ,Whitespace
end2,Identifier
;,Punctuation
 ,Whitespace
i,Identifier
++,Operator
",",Punctuation
 ,Whitespace
j,Identifier
++,Operator
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
a,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
b1,Identifier
[,Punctuation
i,Identifier
],Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xff,Literal
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
b,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
b2,Identifier
[,Punctuation
j,Identifier
],Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xff,Literal
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
a,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
b,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
return,Keyword
 ,Whitespace
a,Identifier
 ,Whitespace
-,Operator
 ,Whitespace
b,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
l1,Identifier
 ,Whitespace
-,Operator
 ,Whitespace
l2,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
HashData,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
BinaryDecoder,Identifier
 ,Whitespace
decoder,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
HashData,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
decoder,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
BinaryDecoder,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
byte,Keyword
[,Punctuation
0,Literal
],Punctuation
",",Punctuation
 ,Whitespace
0,Literal
",",Punctuation
 ,Whitespace
0,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
set,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
bytes,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
start,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
len,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
decoder,Identifier
.,Punctuation
setBuf,Identifier
(,Punctuation
bytes,Identifier
",",Punctuation
 ,Whitespace
start,Identifier
",",Punctuation
 ,Whitespace
len,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
ThreadLocal,Identifier
<,Operator
HashData,Identifier
>,Operator
 ,Whitespace
HASH_DATA,Identifier
"
",Newline
    ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
ThreadLocal,Identifier
<,Operator
HashData,Identifier
>,Operator
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
 ,Whitespace
protected,Keyword
 ,Whitespace
HashData,Identifier
 ,Whitespace
initialValue,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
 ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
HashData,Identifier
(,Punctuation
),Punctuation
;,Punctuation
 ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Hash binary encoded data. Consistent with {@link
   * org.apache.avro.generic.GenericData#hashCode(Object, Schema)}.*/",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
hashCode,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
bytes,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
start,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
length,Identifier
",",Punctuation
"
",Newline
                             ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
HashData,Identifier
 ,Whitespace
data,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
HASH_DATA,Identifier
.,Punctuation
get,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
data,Identifier
.,Punctuation
set,Identifier
(,Punctuation
bytes,Identifier
",",Punctuation
 ,Whitespace
start,Identifier
",",Punctuation
 ,Whitespace
length,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
hashCode,Identifier
(,Punctuation
data,Identifier
",",Punctuation
 ,Whitespace
schema,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
catch,Keyword
 ,Whitespace
(,Punctuation
IOException,Identifier
 ,Whitespace
e,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
AvroRuntimeException,Identifier
(,Punctuation
e,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
hashCode,Identifier
(,Punctuation
HashData,Identifier
 ,Whitespace
data,Identifier
",",Punctuation
 ,Whitespace
Schema,Identifier
 ,Whitespace
schema,Identifier
),Punctuation
"
",Newline
    ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
Decoder,Identifier
 ,Whitespace
decoder,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
data,Identifier
.,Punctuation
decoder,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
switch,Keyword
 ,Whitespace
(,Punctuation
schema,Identifier
.,Punctuation
getType,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
RECORD,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
hashCode,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
1,Literal
;,Punctuation
"
",Newline
      ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
Field,Identifier
 ,Whitespace
field,Identifier
 ,Whitespace
:,Operator
 ,Whitespace
schema,Identifier
.,Punctuation
getFields,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
field,Identifier
.,Punctuation
order,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
==,Operator
 ,Whitespace
Field,Identifier
.,Punctuation
Order,Identifier
.,Punctuation
IGNORE,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
GenericDatumReader,Identifier
.,Punctuation
skip,Identifier
(,Punctuation
field,Identifier
.,Punctuation
schema,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
decoder,Identifier
),Punctuation
;,Punctuation
"
",Newline
          ,Whitespace
continue,Keyword
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
        ,Whitespace
hashCode,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
hashCode,Identifier
*,Operator
31,Literal
 ,Whitespace
+,Operator
 ,Whitespace
hashCode,Identifier
(,Punctuation
data,Identifier
",",Punctuation
 ,Whitespace
field,Identifier
.,Punctuation
schema,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
hashCode,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
ENUM,Identifier
:,Operator
 ,Whitespace
case,Keyword
 ,Whitespace
INT,Identifier
:,Operator
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
decoder,Identifier
.,Punctuation
readInt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
FLOAT,Identifier
:,Operator
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
Float,Identifier
.,Punctuation
floatToIntBits,Identifier
(,Punctuation
decoder,Identifier
.,Punctuation
readFloat,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
LONG,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
long,Keyword
 ,Whitespace
l,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
decoder,Identifier
.,Punctuation
readLong,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
(,Punctuation
int,Keyword
),Punctuation
(,Punctuation
l,Identifier
^,Operator
(,Punctuation
l,Identifier
>>>,Operator
32,Literal
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
DOUBLE,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
long,Keyword
 ,Whitespace
l,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Double,Identifier
.,Punctuation
doubleToLongBits,Identifier
(,Punctuation
decoder,Identifier
.,Punctuation
readDouble,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
(,Punctuation
int,Keyword
),Punctuation
(,Punctuation
l,Identifier
^,Operator
(,Punctuation
l,Identifier
>>>,Operator
32,Literal
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
ARRAY,Identifier
:,Operator
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Schema,Identifier
 ,Whitespace
elementType,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
schema,Identifier
.,Punctuation
getElementType,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
hashCode,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
1,Literal
;,Punctuation
"
",Newline
      ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
long,Keyword
 ,Whitespace
l,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
decoder,Identifier
.,Punctuation
readArrayStart,Identifier
(,Punctuation
),Punctuation
;,Punctuation
 ,Whitespace
l,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
0,Literal
;,Punctuation
 ,Whitespace
l,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
decoder,Identifier
.,Punctuation
arrayNext,Identifier
(,Punctuation
),Punctuation
),Punctuation
"
",Newline
        ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
long,Keyword
 ,Whitespace
i,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
0,Literal
;,Punctuation
 ,Whitespace
i,Identifier
 ,Whitespace
<,Operator
 ,Whitespace
l,Identifier
;,Punctuation
 ,Whitespace
i,Identifier
++,Operator
),Punctuation
"
",Newline
          ,Whitespace
hashCode,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
hashCode,Identifier
*,Operator
31,Literal
 ,Whitespace
+,Operator
 ,Whitespace
hashCode,Identifier
(,Punctuation
data,Identifier
",",Punctuation
 ,Whitespace
elementType,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
hashCode,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
MAP,Identifier
:,Operator
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
AvroRuntimeException,Identifier
(,Punctuation
"""Can't hashCode maps!""",String
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
UNION,Identifier
:,Operator
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
hashCode,Identifier
(,Punctuation
data,Identifier
",",Punctuation
 ,Whitespace
schema,Identifier
.,Punctuation
getTypes,Identifier
(,Punctuation
),Punctuation
.,Punctuation
get,Identifier
(,Punctuation
decoder,Identifier
.,Punctuation
readInt,Identifier
(,Punctuation
),Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
FIXED,Identifier
:,Operator
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
hashBytes,Identifier
(,Punctuation
1,Literal
",",Punctuation
 ,Whitespace
data,Identifier
",",Punctuation
 ,Whitespace
schema,Identifier
.,Punctuation
getFixedSize,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
false,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
STRING,Identifier
:,Operator
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
hashBytes,Identifier
(,Punctuation
0,Literal
",",Punctuation
 ,Whitespace
data,Identifier
",",Punctuation
 ,Whitespace
decoder,Identifier
.,Punctuation
readInt,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
false,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
BYTES,Identifier
:,Operator
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
hashBytes,Identifier
(,Punctuation
1,Literal
",",Punctuation
 ,Whitespace
data,Identifier
",",Punctuation
 ,Whitespace
decoder,Identifier
.,Punctuation
readInt,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
true,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
BOOLEAN,Identifier
:,Operator
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
decoder,Identifier
.,Punctuation
readBoolean,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
?,Operator
 ,Whitespace
1231,Literal
 ,Whitespace
:,Operator
 ,Whitespace
1237,Literal
;,Punctuation
"
",Newline
    ,Whitespace
case,Keyword
 ,Whitespace
NULL,Identifier
:,Operator
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
0,Literal
;,Punctuation
"
",Newline
    ,Whitespace
default,Keyword
:,Operator
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
AvroRuntimeException,Identifier
(,Punctuation
"""Unexpected schema to hashCode!""",String
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
hashBytes,Identifier
(,Punctuation
int,Keyword
 ,Whitespace
init,Identifier
",",Punctuation
 ,Whitespace
HashData,Identifier
 ,Whitespace
data,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
len,Identifier
",",Punctuation
 ,Whitespace
boolean,Keyword
 ,Whitespace
rev,Identifier
),Punctuation
"
",Newline
    ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
hashCode,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
init,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
bytes,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
data,Identifier
.,Punctuation
decoder,Identifier
.,Punctuation
getBuf,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
start,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
data,Identifier
.,Punctuation
decoder,Identifier
.,Punctuation
getPos,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
end,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
start,Identifier
+,Operator
len,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
rev,Identifier
),Punctuation
 ,Whitespace
"
",Newline
      ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
int,Keyword
 ,Whitespace
i,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
end,Identifier
-,Operator
1,Literal
;,Punctuation
 ,Whitespace
i,Identifier
 ,Whitespace
>=,Operator
 ,Whitespace
start,Identifier
;,Punctuation
 ,Whitespace
i,Identifier
--,Operator
),Punctuation
"
",Newline
        ,Whitespace
hashCode,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
hashCode,Identifier
*,Operator
31,Literal
 ,Whitespace
+,Operator
 ,Whitespace
bytes,Identifier
[,Punctuation
i,Identifier
],Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
else,Keyword
"
",Newline
      ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
int,Keyword
 ,Whitespace
i,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
start,Identifier
;,Punctuation
 ,Whitespace
i,Identifier
 ,Whitespace
<,Operator
 ,Whitespace
end,Identifier
;,Punctuation
 ,Whitespace
i,Identifier
++,Operator
),Punctuation
"
",Newline
        ,Whitespace
hashCode,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
hashCode,Identifier
*,Operator
31,Literal
 ,Whitespace
+,Operator
 ,Whitespace
bytes,Identifier
[,Punctuation
i,Identifier
],Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
data,Identifier
.,Punctuation
decoder,Identifier
.,Punctuation
skipFixed,Identifier
(,Punctuation
len,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
hashCode,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Skip a binary-encoded long, returning the position after it. */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
skipLong,Identifier
(,Punctuation
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
bytes,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
start,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
i,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
start,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
int,Keyword
 ,Whitespace
b,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
bytes,Identifier
[,Punctuation
i,Identifier
++,Operator
],Punctuation
;,Punctuation
 ,Whitespace
(,Punctuation
(,Punctuation
b,Identifier
 ,Whitespace
&,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
!=,Operator
 ,Whitespace
0,Literal
),Punctuation
;,Punctuation
 ,Whitespace
b,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
bytes,Identifier
[,Punctuation
i,Identifier
++,Operator
],Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
},Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
i,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Encode a boolean to the byte array at the given position. Will throw
   * IndexOutOfBounds if the position is not valid.
   * @return The number of bytes written to the buffer, 1.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
encodeBoolean,Identifier
(,Punctuation
boolean,Keyword
 ,Whitespace
b,Identifier
",",Punctuation
 ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
buf,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
pos,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
b,Identifier
 ,Whitespace
?,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
 ,Whitespace
1,Literal
 ,Whitespace
:,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
 ,Whitespace
0,Literal
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
1,Literal
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Encode an integer to the byte array at the given position. Will throw
   * IndexOutOfBounds if it overflows. Users should ensure that there are at
   * least 5 bytes left in the buffer before calling this method.
   * @return The number of bytes written to the buffer, between 1 and 5.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
encodeInt,Identifier
(,Punctuation
int,Keyword
 ,Whitespace
n,Identifier
",",Punctuation
 ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
buf,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
pos,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
  ,Whitespace
"// move sign to low-order bit, and flip others if negative",Comment
"
",Newline
    ,Whitespace
n,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
<<,Operator
 ,Whitespace
1,Literal
),Punctuation
 ,Whitespace
^,Operator
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>>,Operator
 ,Whitespace
31,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
start,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
pos,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
&,Operator
 ,Whitespace
~,Operator
0x7F,Literal
),Punctuation
 ,Whitespace
!=,Operator
 ,Whitespace
0,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
0x7F,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
0x7F,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
          ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
          ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
0x7F,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
            ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
            ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
          ,Whitespace
},Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
 ,Whitespace
n,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
pos,Identifier
 ,Whitespace
-,Operator
 ,Whitespace
start,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Encode a long to the byte array at the given position. Will throw
   * IndexOutOfBounds if it overflows. Users should ensure that there are at
   * least 10 bytes left in the buffer before calling this method.
   * @return The number of bytes written to the buffer, between 1 and 10.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
encodeLong,Identifier
(,Punctuation
long,Keyword
 ,Whitespace
n,Identifier
",",Punctuation
 ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
buf,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
pos,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
"// move sign to low-order bit, and flip others if negative",Comment
"
",Newline
    ,Whitespace
n,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
<<,Operator
 ,Whitespace
1,Literal
),Punctuation
 ,Whitespace
^,Operator
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>>,Operator
 ,Whitespace
63,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
start,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
pos,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
&,Operator
 ,Whitespace
~,Operator
0x7FL,Literal
),Punctuation
 ,Whitespace
!=,Operator
 ,Whitespace
0,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
0x7F,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
0x7F,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
          ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
          ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
0x7F,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
            ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
            ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
            ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
0x7F,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
              ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
              ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
              ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
0x7F,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
                ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
                ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
                ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
0x7F,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
                  ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
                  ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
                  ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
0x7F,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
                    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
                    ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
                    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
n,Identifier
 ,Whitespace
>,Operator
 ,Whitespace
0x7F,Literal
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
                      ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
n,Identifier
 ,Whitespace
|,Operator
 ,Whitespace
0x80,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
                      ,Whitespace
n,Identifier
 ,Whitespace
>>>=,Operator
 ,Whitespace
7,Literal
;,Punctuation
"
",Newline
                    ,Whitespace
},Punctuation
"
",Newline
                  ,Whitespace
},Punctuation
"
",Newline
                ,Whitespace
},Punctuation
"
",Newline
              ,Whitespace
},Punctuation
"
",Newline
            ,Whitespace
},Punctuation
"
",Newline
          ,Whitespace
},Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
 ,Whitespace
n,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
pos,Identifier
 ,Whitespace
-,Operator
 ,Whitespace
start,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Encode a float to the byte array at the given position. Will throw
   * IndexOutOfBounds if it overflows. Users should ensure that there are at
   * least 4 bytes left in the buffer before calling this method.
   * @return Returns the number of bytes written to the buffer, 4.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
encodeFloat,Identifier
(,Punctuation
float,Keyword
 ,Whitespace
f,Identifier
",",Punctuation
 ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
buf,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
pos,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
len,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
1,Literal
;,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
bits,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Float,Identifier
.,Punctuation
floatToRawIntBits,Identifier
(,Punctuation
f,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
// hotspot compiler works well with this variant ,Comment
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
],Punctuation
         ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
bits,Identifier
       ,Whitespace
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
len,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
bits,Identifier
 ,Whitespace
>>>,Operator
  ,Whitespace
8,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
len,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
bits,Identifier
 ,Whitespace
>>>,Operator
 ,Whitespace
16,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
len,Identifier
++,Operator
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
bits,Identifier
 ,Whitespace
>>>,Operator
 ,Whitespace
24,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
4,Literal
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/** Encode a double to the byte array at the given position. Will throw
   * IndexOutOfBounds if it overflows. Users should ensure that there are at
   * least 8 bytes left in the buffer before calling this method.
   * @return Returns the number of bytes written to the buffer, 8.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
int,Keyword
 ,Whitespace
encodeDouble,Identifier
(,Punctuation
double,Keyword
 ,Whitespace
d,Identifier
",",Punctuation
 ,Whitespace
byte,Keyword
[,Punctuation
],Punctuation
 ,Whitespace
buf,Identifier
",",Punctuation
 ,Whitespace
int,Keyword
 ,Whitespace
pos,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
long,Keyword
 ,Whitespace
bits,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Double,Identifier
.,Punctuation
doubleToRawLongBits,Identifier
(,Punctuation
d,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
first,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
int,Keyword
),Punctuation
(,Punctuation
bits,Identifier
 ,Whitespace
&,Operator
 ,Whitespace
0xFFFFFFFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
int,Keyword
 ,Whitespace
second,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
int,Keyword
),Punctuation
(,Punctuation
(,Punctuation
bits,Identifier
 ,Whitespace
>>>,Operator
 ,Whitespace
32,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFFFFFFFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
"// the compiler seems to execute this order the best, likely due to",Comment
"
",Newline
    ,Whitespace
// register allocation -- the lifetime of constants is minimized.,Comment
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
],Punctuation
     ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
first,Identifier
        ,Whitespace
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
4,Literal
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
second,Identifier
       ,Whitespace
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
5,Literal
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
second,Identifier
 ,Whitespace
>>>,Operator
  ,Whitespace
8,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
1,Literal
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
first,Identifier
 ,Whitespace
>>>,Operator
   ,Whitespace
8,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
2,Literal
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
first,Identifier
 ,Whitespace
>>>,Operator
  ,Whitespace
16,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
6,Literal
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
second,Identifier
 ,Whitespace
>>>,Operator
 ,Whitespace
16,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
7,Literal
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
second,Identifier
 ,Whitespace
>>>,Operator
 ,Whitespace
24,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
buf,Identifier
[,Punctuation
pos,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
3,Literal
],Punctuation
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
byte,Keyword
),Punctuation
(,Punctuation
(,Punctuation
first,Identifier
 ,Whitespace
>>>,Operator
  ,Whitespace
24,Literal
),Punctuation
 ,Whitespace
&,Operator
 ,Whitespace
0xFF,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
8,Literal
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
},Punctuation
"
",Newline
