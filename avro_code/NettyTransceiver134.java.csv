Text,Token
"/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",Comment
"
",Newline
"
",Newline
package,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
ipc,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
io,Identifier
.,Punctuation
IOException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
net,Identifier
.,Punctuation
InetSocketAddress,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
nio,Identifier
.,Punctuation
ByteBuffer,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
HashMap,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
List,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
Map,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
concurrent,Identifier
.,Punctuation
ConcurrentHashMap,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
concurrent,Identifier
.,Punctuation
ExecutionException,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
concurrent,Identifier
.,Punctuation
Executors,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
concurrent,Identifier
.,Punctuation
ThreadFactory,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
concurrent,Identifier
.,Punctuation
atomic,Identifier
.,Punctuation
AtomicInteger,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
java,Identifier
.,Punctuation
util,Identifier
.,Punctuation
concurrent,Identifier
.,Punctuation
locks,Identifier
.,Punctuation
ReentrantReadWriteLock,Identifier
;,Punctuation
"
",Newline
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
Protocol,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
ipc,Identifier
.,Punctuation
NettyTransportCodec,Identifier
.,Punctuation
NettyDataPack,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
ipc,Identifier
.,Punctuation
NettyTransportCodec,Identifier
.,Punctuation
NettyFrameDecoder,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
apache,Identifier
.,Punctuation
avro,Identifier
.,Punctuation
ipc,Identifier
.,Punctuation
NettyTransportCodec,Identifier
.,Punctuation
NettyFrameEncoder,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
bootstrap,Identifier
.,Punctuation
ClientBootstrap,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
Channel,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
ChannelEvent,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
ChannelFactory,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
ChannelFuture,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
ChannelFutureListener,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
ChannelHandlerContext,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
ChannelPipeline,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
ChannelPipelineFactory,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
ChannelState,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
ChannelStateEvent,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
ChannelUpstreamHandler,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
Channels,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
ExceptionEvent,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
MessageEvent,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
SimpleChannelUpstreamHandler,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
jboss,Identifier
.,Punctuation
netty,Identifier
.,Punctuation
channel,Identifier
.,Punctuation
socket,Identifier
.,Punctuation
nio,Identifier
.,Punctuation
NioClientSocketChannelFactory,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
slf4j,Identifier
.,Punctuation
Logger,Identifier
;,Punctuation
"
",Newline
import,Keyword
 ,Whitespace
org,Identifier
.,Punctuation
slf4j,Identifier
.,Punctuation
LoggerFactory,Identifier
;,Punctuation
"
",Newline
"
",Newline
"/**
 * A Netty-based {@link Transceiver} implementation.
 */",Comment
"
",Newline
public,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
NettyTransceiver,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
Transceiver,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
  ,Whitespace
"/** If not specified, the default connection timeout will be used (60 sec). */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
long,Keyword
 ,Whitespace
DEFAULT_CONNECTION_TIMEOUT_MILLIS,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
60,Literal
 ,Whitespace
*,Operator
 ,Whitespace
1000L,Literal
;,Punctuation
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
NETTY_CONNECT_TIMEOUT_OPTION,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
"
",Newline
      ,Whitespace
"""connectTimeoutMillis""",String
;,Punctuation
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
NETTY_TCP_NODELAY_OPTION,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
"""tcpNoDelay""",String
;,Punctuation
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
NETTY_KEEPALIVE_OPTION,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
"""keepAlive""",String
;,Punctuation
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
boolean,Keyword
 ,Whitespace
DEFAULT_TCP_NODELAY_VALUE,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
true,Keyword
;,Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Logger,Identifier
 ,Whitespace
LOG,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
LoggerFactory,Identifier
.,Punctuation
getLogger,Identifier
(,Punctuation
NettyTransceiver,Identifier
.,Punctuation
class,Keyword
"
",Newline
      ,Whitespace
.,Punctuation
getName,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
AtomicInteger,Identifier
 ,Whitespace
serialGenerator,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
AtomicInteger,Identifier
(,Punctuation
0,Literal
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Map,Identifier
<,Operator
Integer,Identifier
",",Punctuation
 ,Whitespace
Callback,Identifier
<,Operator
List,Identifier
<,Operator
ByteBuffer,Identifier
>>>,Operator
 ,Whitespace
requests,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
"
",Newline
    ,Whitespace
new,Keyword
 ,Whitespace
ConcurrentHashMap,Identifier
<,Operator
Integer,Identifier
",",Punctuation
 ,Whitespace
Callback,Identifier
<,Operator
List,Identifier
<,Operator
ByteBuffer,Identifier
>>>,Operator
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
ChannelFactory,Identifier
 ,Whitespace
channelFactory,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
long,Keyword
 ,Whitespace
connectTimeoutMillis,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
ClientBootstrap,Identifier
 ,Whitespace
bootstrap,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
InetSocketAddress,Identifier
 ,Whitespace
remoteAddr,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
volatile,Keyword
 ,Whitespace
ChannelFuture,Identifier
 ,Whitespace
channelFuture,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
volatile,Keyword
 ,Whitespace
boolean,Keyword
 ,Whitespace
stopping,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Object,Identifier
 ,Whitespace
channelFutureLock,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
Object,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Read lock must be acquired whenever using non-final state.
   * Write lock must be acquired whenever modifying state.
   */",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
ReentrantReadWriteLock,Identifier
 ,Whitespace
stateLock,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
ReentrantReadWriteLock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
Channel,Identifier
 ,Whitespace
channel,Identifier
;,Punctuation
       ,Whitespace
// Synchronized on stateLock,Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
Protocol,Identifier
 ,Whitespace
remote,Identifier
;,Punctuation
       ,Whitespace
// Synchronized on stateLock,Comment
"
",Newline
"
",Newline
  ,Whitespace
NettyTransceiver,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
channelFactory,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
connectTimeoutMillis,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
0L,Literal
;,Punctuation
"
",Newline
    ,Whitespace
bootstrap,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
remoteAddr,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
channelFuture,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates a NettyTransceiver, and attempts to connect to the given address.
   * {@link #DEFAULT_CONNECTION_TIMEOUT_MILLIS} is used for the connection 
   * timeout.
   * @param addr the address to connect to.
   * @throws IOException if an error occurs connecting to the given address.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
NettyTransceiver,Identifier
(,Punctuation
InetSocketAddress,Identifier
 ,Whitespace
addr,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
(,Punctuation
addr,Identifier
",",Punctuation
 ,Whitespace
DEFAULT_CONNECTION_TIMEOUT_MILLIS,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Creates a NettyTransceiver, and attempts to connect to the given address.
   * @param addr the address to connect to.
   * @param connectTimeoutMillis maximum amount of time to wait for connection 
   * establishment in milliseconds, or null to use 
   * {@link #DEFAULT_CONNECTION_TIMEOUT_MILLIS}.
   * @throws IOException if an error occurs connecting to the given address.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
NettyTransceiver,Identifier
(,Punctuation
InetSocketAddress,Identifier
 ,Whitespace
addr,Identifier
",",Punctuation
 ,Whitespace
"
",Newline
      ,Whitespace
Long,Identifier
 ,Whitespace
connectTimeoutMillis,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
(,Punctuation
addr,Identifier
",",Punctuation
 ,Whitespace
new,Keyword
 ,Whitespace
NioClientSocketChannelFactory,Identifier
(,Punctuation
"
",Newline
        ,Whitespace
Executors,Identifier
.,Punctuation
newCachedThreadPool,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
NettyTransceiverThreadFactory,Identifier
(,Punctuation
"
",Newline
            ,Whitespace
"""Avro """,String
 ,Whitespace
+,Operator
 ,Whitespace
NettyTransceiver,Identifier
.,Punctuation
class,Keyword
.,Punctuation
getSimpleName,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
+,Operator
 ,Whitespace
""" Boss""",String
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
"
",Newline
        ,Whitespace
Executors,Identifier
.,Punctuation
newCachedThreadPool,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
NettyTransceiverThreadFactory,Identifier
(,Punctuation
"
",Newline
            ,Whitespace
"""Avro """,String
 ,Whitespace
+,Operator
 ,Whitespace
NettyTransceiver,Identifier
.,Punctuation
class,Keyword
.,Punctuation
getSimpleName,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
+,Operator
 ,Whitespace
""" I/O Worker""",String
),Punctuation
),Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
"
",Newline
        ,Whitespace
connectTimeoutMillis,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates a NettyTransceiver, and attempts to connect to the given address.
   * {@link #DEFAULT_CONNECTION_TIMEOUT_MILLIS} is used for the connection 
   * timeout.
   * @param addr the address to connect to.
   * @param channelFactory the factory to use to create a new Netty Channel.
   * @throws IOException if an error occurs connecting to the given address.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
NettyTransceiver,Identifier
(,Punctuation
InetSocketAddress,Identifier
 ,Whitespace
addr,Identifier
",",Punctuation
 ,Whitespace
ChannelFactory,Identifier
 ,Whitespace
channelFactory,Identifier
),Punctuation
 ,Whitespace
"
",Newline
    ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
(,Punctuation
addr,Identifier
",",Punctuation
 ,Whitespace
channelFactory,Identifier
",",Punctuation
 ,Whitespace
buildDefaultBootstrapOptions,Identifier
(,Punctuation
null,Keyword
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Creates a NettyTransceiver, and attempts to connect to the given address.
   * @param addr the address to connect to.
   * @param channelFactory the factory to use to create a new Netty Channel.
   * @param connectTimeoutMillis maximum amount of time to wait for connection 
   * establishment in milliseconds, or null to use 
   * {@link #DEFAULT_CONNECTION_TIMEOUT_MILLIS}.
   * @throws IOException if an error occurs connecting to the given address.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
NettyTransceiver,Identifier
(,Punctuation
InetSocketAddress,Identifier
 ,Whitespace
addr,Identifier
",",Punctuation
 ,Whitespace
ChannelFactory,Identifier
 ,Whitespace
channelFactory,Identifier
",",Punctuation
 ,Whitespace
"
",Newline
      ,Whitespace
Long,Identifier
 ,Whitespace
connectTimeoutMillis,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
(,Punctuation
addr,Identifier
",",Punctuation
 ,Whitespace
channelFactory,Identifier
",",Punctuation
 ,Whitespace
"
",Newline
        ,Whitespace
buildDefaultBootstrapOptions,Identifier
(,Punctuation
connectTimeoutMillis,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Creates a NettyTransceiver, and attempts to connect to the given address.
   * It is strongly recommended that the {@link #NETTY_CONNECT_TIMEOUT_OPTION} 
   * option be set to a reasonable timeout value (a Long value in milliseconds) 
   * to prevent connect/disconnect attempts from hanging indefinitely.  It is 
   * also recommended that the {@link #NETTY_TCP_NODELAY_OPTION} option be set 
   * to true to minimize RPC latency.
   * @param addr the address to connect to.
   * @param channelFactory the factory to use to create a new Netty Channel.
   * @param nettyClientBootstrapOptions map of Netty ClientBootstrap options 
   * to use.
   * @throws IOException if an error occurs connecting to the given address.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
NettyTransceiver,Identifier
(,Punctuation
InetSocketAddress,Identifier
 ,Whitespace
addr,Identifier
",",Punctuation
 ,Whitespace
ChannelFactory,Identifier
 ,Whitespace
channelFactory,Identifier
",",Punctuation
 ,Whitespace
"
",Newline
      ,Whitespace
Map,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
Object,Identifier
>,Operator
 ,Whitespace
nettyClientBootstrapOptions,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
channelFactory,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
NullPointerException,Identifier
(,Punctuation
"""channelFactory is null""",String
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
// Set up.,Comment
"
",Newline
    ,Whitespace
this,Keyword
.,Punctuation
channelFactory,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
channelFactory,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
this,Keyword
.,Punctuation
connectTimeoutMillis,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
Long,Identifier
),Punctuation
 ,Whitespace
"
",Newline
        ,Whitespace
nettyClientBootstrapOptions,Identifier
.,Punctuation
get,Identifier
(,Punctuation
NETTY_CONNECT_TIMEOUT_OPTION,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
bootstrap,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
ClientBootstrap,Identifier
(,Punctuation
channelFactory,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
remoteAddr,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
addr,Identifier
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
// Configure the event pipeline factory.,Comment
"
",Newline
    ,Whitespace
bootstrap,Identifier
.,Punctuation
setPipelineFactory,Identifier
(,Punctuation
new,Keyword
 ,Whitespace
ChannelPipelineFactory,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
      ,Whitespace
public,Keyword
 ,Whitespace
ChannelPipeline,Identifier
 ,Whitespace
getPipeline,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
Exception,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
ChannelPipeline,Identifier
 ,Whitespace
p,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
Channels,Identifier
.,Punctuation
pipeline,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
p,Identifier
.,Punctuation
addLast,Identifier
(,Punctuation
"""frameDecoder""",String
",",Punctuation
 ,Whitespace
new,Keyword
 ,Whitespace
NettyFrameDecoder,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
p,Identifier
.,Punctuation
addLast,Identifier
(,Punctuation
"""frameEncoder""",String
",",Punctuation
 ,Whitespace
new,Keyword
 ,Whitespace
NettyFrameEncoder,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
p,Identifier
.,Punctuation
addLast,Identifier
(,Punctuation
"""handler""",String
",",Punctuation
 ,Whitespace
createNettyClientAvroHandler,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
return,Keyword
 ,Whitespace
p,Identifier
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
),Punctuation
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
nettyClientBootstrapOptions,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
LOG,Identifier
.,Punctuation
debug,Identifier
(,Punctuation
"""Using Netty bootstrap options: """,String
 ,Whitespace
+,Operator
 ,Whitespace
"
",Newline
          ,Whitespace
nettyClientBootstrapOptions,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
bootstrap,Identifier
.,Punctuation
setOptions,Identifier
(,Punctuation
nettyClientBootstrapOptions,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
// Make a new connection.,Comment
"
",Newline
    ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
lock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
getChannel,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unlock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Creates a Netty ChannelUpstreamHandler for handling events on the 
   * Netty client channel.
   * @return the ChannelUpstreamHandler to use.
   */",Comment
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
ChannelUpstreamHandler,Identifier
 ,Whitespace
createNettyClientAvroHandler,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
NettyClientAvroHandler,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Creates the default options map for the Netty ClientBootstrap.
   * @param connectTimeoutMillis connection timeout in milliseconds, or null 
   * if no timeout is desired.
   * @return the map of Netty bootstrap options.
   */",Comment
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
Map,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
Object,Identifier
>,Operator
 ,Whitespace
buildDefaultBootstrapOptions,Identifier
(,Punctuation
"
",Newline
      ,Whitespace
Long,Identifier
 ,Whitespace
connectTimeoutMillis,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
Map,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
Object,Identifier
>,Operator
 ,Whitespace
options,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
HashMap,Identifier
<,Operator
String,Identifier
",",Punctuation
 ,Whitespace
Object,Identifier
>,Operator
(,Punctuation
3,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
options,Identifier
.,Punctuation
put,Identifier
(,Punctuation
NETTY_TCP_NODELAY_OPTION,Identifier
",",Punctuation
 ,Whitespace
DEFAULT_TCP_NODELAY_VALUE,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
options,Identifier
.,Punctuation
put,Identifier
(,Punctuation
NETTY_KEEPALIVE_OPTION,Identifier
",",Punctuation
 ,Whitespace
true,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
options,Identifier
.,Punctuation
put,Identifier
(,Punctuation
NETTY_CONNECT_TIMEOUT_OPTION,Identifier
",",Punctuation
 ,Whitespace
"
",Newline
        ,Whitespace
connectTimeoutMillis,Identifier
 ,Whitespace
==,Operator
 ,Whitespace
null,Keyword
 ,Whitespace
?,Operator
 ,Whitespace
DEFAULT_CONNECTION_TIMEOUT_MILLIS,Identifier
 ,Whitespace
:,Operator
 ,Whitespace
"
",Newline
          ,Whitespace
connectTimeoutMillis,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
options,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Tests whether the given channel is ready for writing.
   * @return true if the channel is open and ready; false otherwise.
   */",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
boolean,Keyword
 ,Whitespace
isChannelReady,Identifier
(,Punctuation
Channel,Identifier
 ,Whitespace
channel,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
(,Punctuation
channel,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
&&,Operator
 ,Whitespace
"
",Newline
      ,Whitespace
channel,Identifier
.,Punctuation
isOpen,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
&&,Operator
 ,Whitespace
channel,Identifier
.,Punctuation
isBound,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
&&,Operator
 ,Whitespace
channel,Identifier
.,Punctuation
isConnected,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Gets the Netty channel.  If the channel is not connected, first attempts 
   * to connect.
   * NOTE: The stateLock read lock *must* be acquired before calling this 
   * method.
   * @return the Netty channel
   * @throws IOException if an error occurs connecting the channel.
   */",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
Channel,Identifier
 ,Whitespace
getChannel,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
!,Operator
isChannelReady,Identifier
(,Punctuation
channel,Identifier
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
// Need to reconnect,Comment
"
",Newline
      ,Whitespace
// Upgrade to write lock,Comment
"
",Newline
      ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unlock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
stateLock,Identifier
.,Punctuation
writeLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
lock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
!,Operator
isChannelReady,Identifier
(,Punctuation
channel,Identifier
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
synchronized,Keyword
(,Punctuation
channelFutureLock,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
            ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
!,Operator
stopping,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
LOG,Identifier
.,Punctuation
debug,Identifier
(,Punctuation
"""Connecting to """,String
 ,Whitespace
+,Operator
 ,Whitespace
remoteAddr,Identifier
),Punctuation
;,Punctuation
"
",Newline
              ,Whitespace
channelFuture,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
bootstrap,Identifier
.,Punctuation
connect,Identifier
(,Punctuation
remoteAddr,Identifier
),Punctuation
;,Punctuation
"
",Newline
            ,Whitespace
},Punctuation
"
",Newline
          ,Whitespace
},Punctuation
"
",Newline
          ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
channelFuture,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
            ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
              ,Whitespace
channelFuture,Identifier
.,Punctuation
await,Identifier
(,Punctuation
connectTimeoutMillis,Identifier
),Punctuation
;,Punctuation
"
",Newline
            ,Whitespace
},Punctuation
 ,Whitespace
catch,Keyword
 ,Whitespace
(,Punctuation
InterruptedException,Identifier
 ,Whitespace
e,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
              ,Whitespace
Thread,Identifier
.,Punctuation
currentThread,Identifier
(,Punctuation
),Punctuation
.,Punctuation
interrupt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
 ,Whitespace
// Reset interrupt flag,Comment
"
",Newline
              ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
IOException,Identifier
(,Punctuation
"""Interrupted while connecting to """,String
 ,Whitespace
+,Operator
 ,Whitespace
"
",Newline
                  ,Whitespace
remoteAddr,Identifier
),Punctuation
;,Punctuation
"
",Newline
            ,Whitespace
},Punctuation
"
",Newline
"
",Newline
            ,Whitespace
synchronized,Keyword
(,Punctuation
channelFutureLock,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
!,Operator
channelFuture,Identifier
.,Punctuation
isSuccess,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
            ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
IOException,Identifier
(,Punctuation
"""Error connecting to """,String
 ,Whitespace
+,Operator
 ,Whitespace
remoteAddr,Identifier
",",Punctuation
 ,Whitespace
"
",Newline
                ,Whitespace
channelFuture,Identifier
.,Punctuation
getCause,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
          ,Whitespace
},Punctuation
"
",Newline
          ,Whitespace
channel,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
channelFuture,Identifier
.,Punctuation
getChannel,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
              ,Whitespace
channelFuture,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
            ,Whitespace
},Punctuation
"
",Newline
          ,Whitespace
},Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
// Downgrade to read lock:,Comment
"
",Newline
        ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
lock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
stateLock,Identifier
.,Punctuation
writeLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unlock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
channel,Identifier
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Closes the connection to the remote peer if connected.
   */",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
disconnect,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
disconnect,Identifier
(,Punctuation
false,Keyword
",",Punctuation
 ,Whitespace
false,Keyword
",",Punctuation
 ,Whitespace
null,Keyword
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Closes the connection to the remote peer if connected.
   * @param awaitCompletion if true, will block until the close has completed.
   * @param cancelPendingRequests if true, will drain the requests map and 
   * send an IOException to all Callbacks.
   * @param cause if non-null and cancelPendingRequests is true, this Throwable 
   * will be passed to all Callbacks.
   */",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
disconnect,Identifier
(,Punctuation
boolean,Keyword
 ,Whitespace
awaitCompletion,Identifier
",",Punctuation
 ,Whitespace
boolean,Keyword
 ,Whitespace
cancelPendingRequests,Identifier
",",Punctuation
"
",Newline
      ,Whitespace
Throwable,Identifier
 ,Whitespace
cause,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
Channel,Identifier
 ,Whitespace
channelToClose,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
Map,Identifier
<,Operator
Integer,Identifier
",",Punctuation
 ,Whitespace
Callback,Identifier
<,Operator
List,Identifier
<,Operator
ByteBuffer,Identifier
>>>,Operator
 ,Whitespace
requestsToCancel,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
boolean,Keyword
 ,Whitespace
stateReadLockHeld,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
stateLock,Identifier
.,Punctuation
getReadHoldCount,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
!=,Operator
 ,Whitespace
0,Literal
;,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
ChannelFuture,Identifier
 ,Whitespace
channelFutureToCancel,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
synchronized,Keyword
(,Punctuation
channelFutureLock,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
stopping,Identifier
 ,Whitespace
&&,Operator
 ,Whitespace
channelFuture,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
channelFutureToCancel,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
channelFuture,Identifier
;,Punctuation
"
",Newline
          ,Whitespace
channelFuture,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
channelFutureToCancel,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
channelFutureToCancel,Identifier
.,Punctuation
cancel,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
stateReadLockHeld,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unlock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
stateLock,Identifier
.,Punctuation
writeLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
lock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
channel,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
cause,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
LOG,Identifier
.,Punctuation
debug,Identifier
(,Punctuation
"""Disconnecting from """,String
 ,Whitespace
+,Operator
 ,Whitespace
remoteAddr,Identifier
",",Punctuation
 ,Whitespace
cause,Identifier
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
        ,Whitespace
else,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
LOG,Identifier
.,Punctuation
debug,Identifier
(,Punctuation
"""Disconnecting from """,String
 ,Whitespace
+,Operator
 ,Whitespace
remoteAddr,Identifier
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
        ,Whitespace
channelToClose,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
channel,Identifier
;,Punctuation
"
",Newline
        ,Whitespace
channel,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
        ,Whitespace
remote,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
cancelPendingRequests,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
// Remove all pending requests (will be canceled after relinquishing ,Comment
"
",Newline
          ,Whitespace
// write lock).,Comment
"
",Newline
          ,Whitespace
requestsToCancel,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
"
",Newline
            ,Whitespace
new,Keyword
 ,Whitespace
ConcurrentHashMap,Identifier
<,Operator
Integer,Identifier
",",Punctuation
 ,Whitespace
Callback,Identifier
<,Operator
List,Identifier
<,Operator
ByteBuffer,Identifier
>>>,Operator
(,Punctuation
requests,Identifier
),Punctuation
;,Punctuation
"
",Newline
          ,Whitespace
requests,Identifier
.,Punctuation
clear,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
stateReadLockHeld,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
lock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
stateLock,Identifier
.,Punctuation
writeLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unlock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
// Cancel any pending requests by sending errors to the callbacks:,Comment
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
(,Punctuation
requestsToCancel,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
&&,Operator
 ,Whitespace
!,Operator
requestsToCancel,Identifier
.,Punctuation
isEmpty,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
LOG,Identifier
.,Punctuation
debug,Identifier
(,Punctuation
"""Removing """,String
 ,Whitespace
+,Operator
 ,Whitespace
requestsToCancel,Identifier
.,Punctuation
size,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
+,Operator
 ,Whitespace
""" pending request(s).""",String
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
for,Keyword
 ,Whitespace
(,Punctuation
Callback,Identifier
<,Operator
List,Identifier
<,Operator
ByteBuffer,Identifier
>>,Operator
 ,Whitespace
request,Identifier
 ,Whitespace
:,Operator
 ,Whitespace
requestsToCancel,Identifier
.,Punctuation
values,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
request,Identifier
.,Punctuation
handleError,Identifier
(,Punctuation
"
",Newline
            ,Whitespace
cause,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
 ,Whitespace
?,Operator
 ,Whitespace
cause,Identifier
 ,Whitespace
:,Operator
 ,Whitespace
"
",Newline
              ,Whitespace
new,Keyword
 ,Whitespace
IOException,Identifier
(,Punctuation
getClass,Identifier
(,Punctuation
),Punctuation
.,Punctuation
getSimpleName,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
+,Operator
 ,Whitespace
""" closed""",String
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
// Close the channel:,Comment
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
channelToClose,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
ChannelFuture,Identifier
 ,Whitespace
closeFuture,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
channelToClose,Identifier
.,Punctuation
close,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
awaitCompletion,Identifier
 ,Whitespace
&&,Operator
 ,Whitespace
(,Punctuation
closeFuture,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
closeFuture,Identifier
.,Punctuation
await,Identifier
(,Punctuation
connectTimeoutMillis,Identifier
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
 ,Whitespace
catch,Keyword
 ,Whitespace
(,Punctuation
InterruptedException,Identifier
 ,Whitespace
e,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
Thread,Identifier
.,Punctuation
currentThread,Identifier
(,Punctuation
),Punctuation
.,Punctuation
interrupt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
   ,Whitespace
// Reset interrupt flag,Comment
"
",Newline
          ,Whitespace
LOG,Identifier
.,Punctuation
warn,Identifier
(,Punctuation
"""Interrupted while disconnecting""",String
",",Punctuation
 ,Whitespace
e,Identifier
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Netty channels are thread-safe, so there is no need to acquire locks.
   * This method is a no-op.
   */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
lockChannel,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Netty channels are thread-safe, so there is no need to acquire locks.
   * This method is a no-op.
   */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
unlockChannel,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Closes this transceiver and disconnects from the remote peer.
   * Cancels all pending RPCs, sends an IOException to all pending callbacks, 
   * and blocks until the close has completed.
   */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
close,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
close,Identifier
(,Punctuation
true,Keyword
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Closes this transceiver and disconnects from the remote peer.
   * Cancels all pending RPCs and sends an IOException to all pending callbacks.
   * @param awaitCompletion if true, will block until the close has completed.
   */",Comment
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
close,Identifier
(,Punctuation
boolean,Keyword
 ,Whitespace
awaitCompletion,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
// Close the connection:,Comment
"
",Newline
      ,Whitespace
stopping,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
true,Keyword
;,Punctuation
"
",Newline
      ,Whitespace
disconnect,Identifier
(,Punctuation
awaitCompletion,Identifier
",",Punctuation
 ,Whitespace
true,Keyword
",",Punctuation
 ,Whitespace
null,Keyword
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
// Shut down all thread pools to exit.,Comment
"
",Newline
      ,Whitespace
channelFactory,Identifier
.,Punctuation
releaseExternalResources,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
getRemoteName,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
lock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
getChannel,Identifier
(,Punctuation
),Punctuation
.,Punctuation
getRemoteAddress,Identifier
(,Punctuation
),Punctuation
.,Punctuation
toString,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unlock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Override as non-synchronized method because the method is thread safe.
   */",Comment
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
List,Identifier
<,Operator
ByteBuffer,Identifier
>,Operator
 ,Whitespace
transceive,Identifier
(,Punctuation
List,Identifier
<,Operator
ByteBuffer,Identifier
>,Operator
 ,Whitespace
request,Identifier
),Punctuation
 ,Whitespace
"
",Newline
    ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
CallFuture,Identifier
<,Operator
List,Identifier
<,Operator
ByteBuffer,Identifier
>>,Operator
 ,Whitespace
transceiverFuture,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
CallFuture,Identifier
<,Operator
List,Identifier
<,Operator
ByteBuffer,Identifier
>>,Operator
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
transceive,Identifier
(,Punctuation
request,Identifier
",",Punctuation
 ,Whitespace
transceiverFuture,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
transceiverFuture,Identifier
.,Punctuation
get,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
catch,Keyword
 ,Whitespace
(,Punctuation
InterruptedException,Identifier
 ,Whitespace
e,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
LOG,Identifier
.,Punctuation
debug,Identifier
(,Punctuation
"""failed to get the response""",String
",",Punctuation
 ,Whitespace
e,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
catch,Keyword
 ,Whitespace
(,Punctuation
ExecutionException,Identifier
 ,Whitespace
e,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
LOG,Identifier
.,Punctuation
debug,Identifier
(,Punctuation
"""failed to get the response""",String
",",Punctuation
 ,Whitespace
e,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
null,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
transceive,Identifier
(,Punctuation
List,Identifier
<,Operator
ByteBuffer,Identifier
>,Operator
 ,Whitespace
request,Identifier
",",Punctuation
 ,Whitespace
"
",Newline
      ,Whitespace
Callback,Identifier
<,Operator
List,Identifier
<,Operator
ByteBuffer,Identifier
>>,Operator
 ,Whitespace
callback,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
lock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
int,Keyword
 ,Whitespace
serial,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
serialGenerator,Identifier
.,Punctuation
incrementAndGet,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
NettyDataPack,Identifier
 ,Whitespace
dataPack,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
NettyDataPack,Identifier
(,Punctuation
serial,Identifier
",",Punctuation
 ,Whitespace
request,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
requests,Identifier
.,Punctuation
put,Identifier
(,Punctuation
serial,Identifier
",",Punctuation
 ,Whitespace
callback,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
writeDataPack,Identifier
(,Punctuation
dataPack,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unlock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
writeBuffers,Identifier
(,Punctuation
List,Identifier
<,Operator
ByteBuffer,Identifier
>,Operator
 ,Whitespace
buffers,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
ChannelFuture,Identifier
 ,Whitespace
writeFuture,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
lock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
writeFuture,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
writeDataPack,Identifier
(,Punctuation
"
",Newline
          ,Whitespace
new,Keyword
 ,Whitespace
NettyDataPack,Identifier
(,Punctuation
serialGenerator,Identifier
.,Punctuation
incrementAndGet,Identifier
(,Punctuation
),Punctuation
",",Punctuation
 ,Whitespace
buffers,Identifier
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unlock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
!,Operator
writeFuture,Identifier
.,Punctuation
isDone,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
writeFuture,Identifier
.,Punctuation
await,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
 ,Whitespace
catch,Keyword
 ,Whitespace
(,Punctuation
InterruptedException,Identifier
 ,Whitespace
e,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
Thread,Identifier
.,Punctuation
currentThread,Identifier
(,Punctuation
),Punctuation
.,Punctuation
interrupt,Identifier
(,Punctuation
),Punctuation
;,Punctuation
   ,Whitespace
// Reset interrupt flag,Comment
"
",Newline
        ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
IOException,Identifier
(,Punctuation
"""Interrupted while writing Netty data pack""",String
",",Punctuation
 ,Whitespace
e,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
!,Operator
writeFuture,Identifier
.,Punctuation
isSuccess,Identifier
(,Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
IOException,Identifier
(,Punctuation
"""Error writing buffers""",String
",",Punctuation
 ,Whitespace
writeFuture,Identifier
.,Punctuation
getCause,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * Writes a NettyDataPack, reconnecting to the remote peer if necessary.
   * NOTE: The stateLock read lock *must* be acquired before calling this 
   * method.
   * @param dataPack the data pack to write.
   * @return the Netty ChannelFuture for the write operation.
   * @throws IOException if an error occurs connecting to the remote peer.
   */",Comment
"
",Newline
  ,Whitespace
private,Keyword
 ,Whitespace
ChannelFuture,Identifier
 ,Whitespace
writeDataPack,Identifier
(,Punctuation
NettyDataPack,Identifier
 ,Whitespace
dataPack,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
return,Keyword
 ,Whitespace
getChannel,Identifier
(,Punctuation
),Punctuation
.,Punctuation
write,Identifier
(,Punctuation
dataPack,Identifier
),Punctuation
;,Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
List,Identifier
<,Operator
ByteBuffer,Identifier
>,Operator
 ,Whitespace
readBuffers,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
IOException,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
UnsupportedOperationException,Identifier
(,Punctuation
),Punctuation
;,Punctuation
  ,Whitespace
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
Protocol,Identifier
 ,Whitespace
getRemote,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
lock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
remote,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unlock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
boolean,Keyword
 ,Whitespace
isConnected,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
lock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
remote,Identifier
!=,Operator
null,Keyword
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
stateLock,Identifier
.,Punctuation
readLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unlock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
  ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
setRemote,Identifier
(,Punctuation
Protocol,Identifier
 ,Whitespace
protocol,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
stateLock,Identifier
.,Punctuation
writeLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
lock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
remote,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
protocol,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
stateLock,Identifier
.,Punctuation
writeLock,Identifier
(,Punctuation
),Punctuation
.,Punctuation
unlock,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
"
",Newline
  ,Whitespace
"/**
   * A ChannelFutureListener for channel write operations that notifies 
   * a {@link Callback} if an error occurs while writing to the channel.
   */",Comment
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
WriteFutureListener,Identifier
 ,Whitespace
implements,Keyword
 ,Whitespace
ChannelFutureListener,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
protected,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
Callback,Identifier
<,Operator
List,Identifier
<,Operator
ByteBuffer,Identifier
>>,Operator
 ,Whitespace
callback,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Creates a WriteFutureListener that notifies the given callback 
     * if an error occurs writing data to the channel.
     * @param callback the callback to notify, or null to skip notification.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
WriteFutureListener,Identifier
(,Punctuation
Callback,Identifier
<,Operator
List,Identifier
<,Operator
ByteBuffer,Identifier
>>,Operator
 ,Whitespace
callback,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
callback,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
callback,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
operationComplete,Identifier
(,Punctuation
ChannelFuture,Identifier
 ,Whitespace
future,Identifier
),Punctuation
 ,Whitespace
throws,Keyword
 ,Whitespace
Exception,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
!,Operator
future,Identifier
.,Punctuation
isSuccess,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
&&,Operator
 ,Whitespace
(,Punctuation
callback,Identifier
 ,Whitespace
!=,Operator
 ,Whitespace
null,Keyword
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
callback,Identifier
.,Punctuation
handleError,Identifier
(,Punctuation
"
",Newline
            ,Whitespace
new,Keyword
 ,Whitespace
IOException,Identifier
(,Punctuation
"""Error writing buffers""",String
",",Punctuation
 ,Whitespace
future,Identifier
.,Punctuation
getCause,Identifier
(,Punctuation
),Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Avro client handler for the Netty transport 
   */",Comment
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
NettyClientAvroHandler,Identifier
 ,Whitespace
extends,Keyword
 ,Whitespace
SimpleChannelUpstreamHandler,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
handleUpstream,Identifier
(,Punctuation
ChannelHandlerContext,Identifier
 ,Whitespace
ctx,Identifier
",",Punctuation
 ,Whitespace
ChannelEvent,Identifier
 ,Whitespace
e,Identifier
),Punctuation
"
",Newline
        ,Whitespace
throws,Keyword
 ,Whitespace
Exception,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
e,Identifier
 ,Whitespace
instanceof,Keyword
 ,Whitespace
ChannelStateEvent,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
LOG,Identifier
.,Punctuation
debug,Identifier
(,Punctuation
e,Identifier
.,Punctuation
toString,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
ChannelStateEvent,Identifier
 ,Whitespace
cse,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
ChannelStateEvent,Identifier
),Punctuation
e,Identifier
;,Punctuation
"
",Newline
        ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
(,Punctuation
cse,Identifier
.,Punctuation
getState,Identifier
(,Punctuation
),Punctuation
 ,Whitespace
==,Operator
 ,Whitespace
ChannelState,Identifier
.,Punctuation
OPEN,Identifier
),Punctuation
 ,Whitespace
&&,Operator
 ,Whitespace
(,Punctuation
Boolean,Identifier
.,Punctuation
FALSE,Identifier
.,Punctuation
equals,Identifier
(,Punctuation
cse,Identifier
.,Punctuation
getValue,Identifier
(,Punctuation
),Punctuation
),Punctuation
),Punctuation
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
          ,Whitespace
// Server closed connection; disconnect client side,Comment
"
",Newline
          ,Whitespace
LOG,Identifier
.,Punctuation
debug,Identifier
(,Punctuation
"""Remote peer """,String
 ,Whitespace
+,Operator
 ,Whitespace
remoteAddr,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
""" closed connection.""",String
),Punctuation
;,Punctuation
"
",Newline
          ,Whitespace
disconnect,Identifier
(,Punctuation
false,Keyword
",",Punctuation
 ,Whitespace
true,Keyword
",",Punctuation
 ,Whitespace
null,Keyword
),Punctuation
;,Punctuation
"
",Newline
        ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
super,Keyword
.,Punctuation
handleUpstream,Identifier
(,Punctuation
ctx,Identifier
",",Punctuation
 ,Whitespace
e,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
channelOpen,Identifier
(,Punctuation
ChannelHandlerContext,Identifier
 ,Whitespace
ctx,Identifier
",",Punctuation
 ,Whitespace
ChannelStateEvent,Identifier
 ,Whitespace
e,Identifier
),Punctuation
"
",Newline
        ,Whitespace
throws,Keyword
 ,Whitespace
Exception,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
// channel = e.getChannel();,Comment
"
",Newline
      ,Whitespace
super,Keyword
.,Punctuation
channelOpen,Identifier
(,Punctuation
ctx,Identifier
",",Punctuation
 ,Whitespace
e,Identifier
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
messageReceived,Identifier
(,Punctuation
ChannelHandlerContext,Identifier
 ,Whitespace
ctx,Identifier
",",Punctuation
 ,Whitespace
final,Keyword
 ,Whitespace
MessageEvent,Identifier
 ,Whitespace
e,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
NettyDataPack,Identifier
 ,Whitespace
dataPack,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
(,Punctuation
NettyDataPack,Identifier
),Punctuation
e,Identifier
.,Punctuation
getMessage,Identifier
(,Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
Callback,Identifier
<,Operator
List,Identifier
<,Operator
ByteBuffer,Identifier
>>,Operator
 ,Whitespace
callback,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
requests,Identifier
.,Punctuation
get,Identifier
(,Punctuation
dataPack,Identifier
.,Punctuation
getSerial,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
if,Keyword
 ,Whitespace
(,Punctuation
callback,Identifier
==,Operator
null,Keyword
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
throw,Keyword
 ,Whitespace
new,Keyword
 ,Whitespace
RuntimeException,Identifier
(,Punctuation
"""Missing previous call info""",String
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
      ,Whitespace
try,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
callback,Identifier
.,Punctuation
handleResult,Identifier
(,Punctuation
dataPack,Identifier
.,Punctuation
getDatas,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
 ,Whitespace
finally,Keyword
 ,Whitespace
{,Punctuation
"
",Newline
        ,Whitespace
requests,Identifier
.,Punctuation
remove,Identifier
(,Punctuation
dataPack,Identifier
.,Punctuation
getSerial,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
void,Keyword
 ,Whitespace
exceptionCaught,Identifier
(,Punctuation
ChannelHandlerContext,Identifier
 ,Whitespace
ctx,Identifier
",",Punctuation
 ,Whitespace
ExceptionEvent,Identifier
 ,Whitespace
e,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
disconnect,Identifier
(,Punctuation
false,Keyword
",",Punctuation
 ,Whitespace
true,Keyword
",",Punctuation
 ,Whitespace
e,Identifier
.,Punctuation
getCause,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
      ,Whitespace
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
"
",Newline
  ,Whitespace
"/**
   * Creates threads with unique names based on a specified name prefix.
   */",Comment
"
",Newline
  ,Whitespace
protected,Keyword
 ,Whitespace
static,Keyword
 ,Whitespace
class,Keyword
 ,Whitespace
NettyTransceiverThreadFactory,Identifier
 ,Whitespace
implements,Keyword
 ,Whitespace
ThreadFactory,Identifier
 ,Whitespace
{,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
AtomicInteger,Identifier
 ,Whitespace
threadId,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
AtomicInteger,Identifier
(,Punctuation
0,Literal
),Punctuation
;,Punctuation
"
",Newline
    ,Whitespace
private,Keyword
 ,Whitespace
final,Keyword
 ,Whitespace
String,Identifier
 ,Whitespace
prefix,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
"/**
     * Creates a NettyTransceiverThreadFactory that creates threads with the 
     * specified name.
     * @param prefix the name prefix to use for all threads created by this 
     * ThreadFactory.  A unique ID will be appended to this prefix to form the 
     * final thread name.
     */",Comment
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
NettyTransceiverThreadFactory,Identifier
(,Punctuation
String,Identifier
 ,Whitespace
prefix,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
this,Keyword
.,Punctuation
prefix,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
prefix,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
    ,Whitespace
"
",Newline
    ,Whitespace
@,Punctuation
Override,Identifier
"
",Newline
    ,Whitespace
public,Keyword
 ,Whitespace
Thread,Identifier
 ,Whitespace
newThread,Identifier
(,Punctuation
Runnable,Identifier
 ,Whitespace
r,Identifier
),Punctuation
 ,Whitespace
{,Punctuation
"
",Newline
      ,Whitespace
Thread,Identifier
 ,Whitespace
thread,Identifier
 ,Whitespace
=,Operator
 ,Whitespace
new,Keyword
 ,Whitespace
Thread,Identifier
(,Punctuation
r,Identifier
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
thread,Identifier
.,Punctuation
setName,Identifier
(,Punctuation
prefix,Identifier
 ,Whitespace
+,Operator
 ,Whitespace
""" """,String
 ,Whitespace
+,Operator
 ,Whitespace
threadId,Identifier
.,Punctuation
incrementAndGet,Identifier
(,Punctuation
),Punctuation
),Punctuation
;,Punctuation
"
",Newline
      ,Whitespace
return,Keyword
 ,Whitespace
thread,Identifier
;,Punctuation
"
",Newline
    ,Whitespace
},Punctuation
"
",Newline
  ,Whitespace
},Punctuation
"
",Newline
},Punctuation
"
",Newline
